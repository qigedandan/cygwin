string_arguments=voidafter get in block: i: 2103
macro: #define RealMainP$Scheduler$init(void) SchedulerBasicP$Scheduler$init()

string_arguments=voidafter get in block: i: 2115
macro: #define ActiveMessageAddressC$ActiveMessageAddress$changed(void) FlashIEEEP$ActiveMessageAddress$changed()

string_arguments=am_group_t arg_0x7e9c3f10, am_addr_t arg_0x7e9b60b0after get in block: i: 2135
macro: #define FlashIEEEP$ActiveMessageAddress$setAddress(arg_0x7e9c3f10,arg_0x7e9b60b0) ActiveMessageAddressC$ActiveMessageAddress$setAddress(arg_0x7e9c3f10, arg_0x7e9b60b0)

string_arguments=voidafter get in block: i: 2154
macro: #define PlatformP$FlashIEEE$WriteToAM(void) FlashIEEEP$FlashIEEE$WriteToAM()

string_arguments=voidafter get in block: i: 2181
macro: #define PlatformP$FlashIEEE$WriteToRegister(void) FlashIEEEP$FlashIEEE$WriteToRegister()

string_arguments=voidafter get in block: i: 2240
macro: #define PlatformP$FlashIEEEInit$init(void) FlashIEEEP$Init$init()

string_arguments=voidafter get in block: i: 2263
macro: #define LedsP$BoardYellowLed$set(void) HplCC2430GeneralIOC$P14$set()

string_arguments=voidafter get in block: i: 2278
macro: #define LedsP$BoardGreenLed$set(void) HplCC2430GeneralIOC$P10$set()

string_arguments=voidafter get in block: i: 2293
macro: #define LedsP$BoardBlueLed$set(void) HplCC2430GeneralIOC$P11$set()

string_arguments=voidafter get in block: i: 2308
macro: #define LedsP$BoardRedLed$set(void) HplCC2430GeneralIOC$P01$set()

string_arguments=voidafter get in block: i: 2323
macro: #define LedsP$BoardYellowLed$makeOutput(void) HplCC2430GeneralIOC$P14$makeOutput()

string_arguments=voidafter get in block: i: 2338
macro: #define LedsP$BoardGreenLed$makeOutput(void) HplCC2430GeneralIOC$P10$makeOutput()

string_arguments=voidafter get in block: i: 2353
macro: #define LedsP$BoardBlueLed$makeOutput(void) HplCC2430GeneralIOC$P11$makeOutput()

string_arguments=voidafter get in block: i: 2368
macro: #define LedsP$BoardRedLed$makeOutput(void) HplCC2430GeneralIOC$P01$makeOutput()

string_arguments=voidafter get in block: i: 2383
macro: #define LedsP$YellowLed$set(void) HplCC2430GeneralIOC$P20$set()

string_arguments=voidafter get in block: i: 2398
macro: #define LedsP$BlueLed$set(void) HplCC2430GeneralIOC$P12$set()

string_arguments=voidafter get in block: i: 2413
macro: #define LedsP$RedLed$set(void) HplCC2430GeneralIOC$P13$set()

string_arguments=voidafter get in block: i: 2428
macro: #define LedsP$YellowLed$makeOutput(void) HplCC2430GeneralIOC$P20$makeOutput()

string_arguments=voidafter get in block: i: 2443
macro: #define LedsP$BlueLed$makeOutput(void) HplCC2430GeneralIOC$P12$makeOutput()

string_arguments=voidafter get in block: i: 2458
macro: #define LedsP$RedLed$makeOutput(void) HplCC2430GeneralIOC$P13$makeOutput()

string_arguments=voidafter get in block: i: 2492
macro: #define PlatformP$LedsInit$init(void) LedsP$Init$init()

string_arguments=voidafter get in block: i: 2561
macro: #define RealMainP$PlatformInit$init(void) PlatformP$Init$init()

string_arguments=voidafter get in block: i: 2576
macro: #define RealMainP$Scheduler$runNextTask(void) SchedulerBasicP$Scheduler$runNextTask()

string_arguments=voidafter get in block: i: 2600
macro: #define BlinkM$Leds$YellowLedOn(void) LedsP$Leds$YellowLedOn()

string_arguments=voidafter get in block: i: 2615
macro: #define LedsP$BoardRedLed$clr(void) HplCC2430GeneralIOC$P01$clr()

string_arguments=voidafter get in block: i: 2630
macro: #define LedsP$RedLed$clr(void) HplCC2430GeneralIOC$P13$clr()

string_arguments=voidafter get in block: i: 2646
macro: #define BlinkM$Leds$RedLedOff(void) LedsP$Leds$RedLedOff()

string_arguments=voidafter get in block: i: 2662
macro: #define BlinkM$Leds$BlueLedOn(void) LedsP$Leds$BlueLedOn()

string_arguments=voidafter get in block: i: 2677
macro: #define LedsP$BoardGreenLed$clr(void) HplCC2430GeneralIOC$P10$clr()

string_arguments=voidafter get in block: i: 2691
macro: #define BlinkM$Leds$GreenLedOff(void) LedsP$Leds$GreenLedOff()

string_arguments=voidafter get in block: i: 2706
macro: #define LedsP$BoardYellowLed$clr(void) HplCC2430GeneralIOC$P14$clr()

string_arguments=voidafter get in block: i: 2721
macro: #define LedsP$YellowLed$clr(void) HplCC2430GeneralIOC$P20$clr()

string_arguments=voidafter get in block: i: 2737
macro: #define BlinkM$Leds$YellowLedOff(void) LedsP$Leds$YellowLedOff()

string_arguments=voidafter get in block: i: 2753
macro: #define BlinkM$Leds$RedLedOn(void) LedsP$Leds$RedLedOn()

string_arguments=voidafter get in block: i: 2768
macro: #define LedsP$BoardBlueLed$clr(void) HplCC2430GeneralIOC$P11$clr()

string_arguments=voidafter get in block: i: 2783
macro: #define LedsP$BlueLed$clr(void) HplCC2430GeneralIOC$P12$clr()

string_arguments=voidafter get in block: i: 2799
macro: #define BlinkM$Leds$BlueLedOff(void) LedsP$Leds$BlueLedOff()

string_arguments=voidafter get in block: i: 2813
macro: #define BlinkM$Leds$GreenLedOn(void) LedsP$Leds$GreenLedOn()

string_arguments=voidafter get in block: i: 2828
macro: #define RealMainP$SoftwareInit$init(void) RealMainP$SoftwareInit$default$init()

string_arguments=voidafter get in block: i: 2895
macro: #define BlinkM$DemoLed$postTask(void) SchedulerBasicP$TaskBasic$postTask(BlinkM$DemoLed)

string_arguments=voidafter get in block: i: 2917
macro: #define RealMainP$Boot$booted(void) BlinkM$Boot$booted()

string_arguments=voidafter get in block: i: 2929
macro: #define McuSleepP$McuSleepControl$afterWakeup(void) McuSleepP$McuSleepControl$default$afterWakeup()

string_arguments=voidafter get in block: i: 2949
macro: #define McuSleepP$McuSleepControl$beforeSleep(void) McuSleepP$McuSleepControl$default$beforeSleep()

string_arguments=voidafter get in block: i: 2977
macro: #define McuSleepP$McuSleepLockMan$isLocked(void) McuSleepLockManP$0$McuSleepLockMan$isLocked()

string_arguments=voidafter get in block: i: 3022
macro: #define SchedulerBasicP$McuSleep$sleep(void) McuSleepP$McuSleep$sleep()

string_arguments=uint8_t arg_0x7ed54e00after get in block: i: 3034
string_arguments=voidafter get in block: i: 3102
macro: #define RealMainP$Scheduler$taskLoop(void) SchedulerBasicP$Scheduler$taskLoop()

