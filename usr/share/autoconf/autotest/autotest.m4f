# This is a frozen state file generated by GNU M4 1.4.7
V1
Q1,1
[]
T10,27
m4_providem4_define([m4_provide($1)])
T24,1
_AS_DETECT_REQUIRED_BODY:
T21,340
_AS_BOURNE_COMPATIBLEAS_IF([test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1],
 [emulate sh
  NULLCMD=:
  [#] Zsh 3.x and 4.x performs word splitting on ${1+"$[@]"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$[@]"}'='"$[@]"'
  setopt NO_GLOB_SUBST],
 [AS_CASE([`(set -o) 2>/dev/null`], [*posix*], [set -o posix])])

T29,81
m4_location(_AS_EXPR_PREPARE)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:817
T7,30
AS_WARNAS_MESSAGE([WARNING: $1], [2])
F7,4
m4_decrdecr
T14,50
m4_divert_textm4_divert_push([$1])dnl
$2
m4_divert_pop([$1])dnl

T8,634
AT_SETUPm4_ifdef([AT_keywords], [m4_undefine([AT_keywords])])
m4_ifdef([AT_capture_files], [m4_undefine([AT_capture_files])])
m4_define([AT_line], AT_LINE)
m4_define([AT_xfail], [at_xfail=no])
m4_define([AT_description], [$1])
m4_define([AT_ordinal], m4_incr(AT_ordinal))
m4_append([AT_groups_all], [ ]m4_defn([AT_ordinal]))
m4_divert_push([TESTS])dnl
  AT_ordinal ) @%:@ AT_ordinal. m4_defn([AT_line]): $1
    at_setup_line='m4_defn([AT_line])'
    at_desc="AS_ESCAPE([$1])"
    $at_quiet $ECHO_N "m4_format([%3d: %-]m4_eval(47 - m4_qdelta([$1]))[s],
	               AT_ordinal, AS_ESCAPE([[$1]]))[]$ECHO_C"
m4_divert_push([TEST_SCRIPT])dnl

T5,70
m4_dom4_if($#, 0, [],
       $#, 1, [$1],
       [$1[]m4_do(m4_shift($@))])
T26,3
_m4_divert(PARSE_ARGS_END)202
T10,26
m4_defaultm4_ifval([$1], [$1], [$2])
T10,73
AS_VAR_SETAS_LITERAL_IF([$1],
	       [$1=$2],
	       [eval "$1=AS_ESCAPE([$2])"])
T7,30
m4_copym4_define([$2], m4_defn([$1]))
T15,49
AT_CAPTURE_FILEm4_append_uniq([AT_capture_files], ["$1"], [ \
])
T27,3
_m4_divert(VERSION_NOTICES)351
T19,3
_m4_divert(VERSION)350
T8,0
_m4_warn
T21,81
m4_location(AS_UNSET)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:548
T10,52
m4_flattenm4_translit(m4_bpatsubst([[[$1]]], [\\
]), [
], [ ])
F12,9
m4_debugmodedebugmode
T20,81
m4_location(AS_LN_S)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:926
T7,0
__gnu__
T9,51
m4_shiftnm4_assert(($1 >= 0) && ($# > $1))dnl
_m4_shiftn($@)
T7,101
_m4_for$4[]dnl
m4_if($1, [$2], [],
      [m4_define([$1], m4_eval($1+[$3]))_m4_for([$1], [$2], [$3], [$4])])
T12,71
AS_COPYRIGHTm4_divert_text([HEADER-COPYRIGHT],
[m4_bpatsubst([
$1], [^], [@%:@ ])])
T8,42
AT_CHECK_AT_CHECK([$1],[$2],[$3],[$4],[$5],[$6],1)
T27,82
m4_location(_AS_CR_PREPARE)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:1332
T18,1352
_AS_LINENO_PREPAREAS_REQUIRE([_AS_CR_PREPARE])dnl
_AS_DETECT_SUGGESTED([_AS_LINENO_WORKS])
_AS_LINENO_WORKS || {

  # Create $as_me.lineno as a copy of $as_myself, but with $LINENO
  # uniformly replaced by the line number.  The first 'sed' inserts a
  # line-number line after each line using $LINENO; the second 'sed'
  # does the real work.  The second script uses 'N' to pair each
  # line-number line with the line containing $LINENO, and appends
  # trailing '-' during substitution so that $LINENO is not a special
  # case at line end.
  # (Raja R Harinath suggested sed '=', and Paul Eggert wrote the
  # scripts with optimization help from Paolo Bonzini.  Blame Lee
  # E. McMahon (1931-1989) for sed's syntax.  :-)
  sed -n '
    p
    /[[$]]LINENO/=
  ' <$as_myself |
    sed '
      s/[[$]]LINENO.*/&-/
      t lineno
      b
      :lineno
      N
      :loop
      s/[[$]]LINENO\([[^'$as_cr_alnum'_]].*\n\)\(.*\)/\2\1\2/
      t loop
      s/-\n.*//
    ' >$as_me.lineno &&
  chmod +x "$as_me.lineno" ||
    AS_ERROR([cannot create $as_me.lineno; rerun with a POSIX shell])

  # Don't try to exec as it changes $[0], causing all sort of problems
  # (the dirname of $[0] is not the place where we might find the
  # original and so on.  Autoconf is especially sensitive to this).
  . "./$as_me.lineno"
  # Exit status is that of the last command.
  exit
}

T40,82
m4_location(_AS_VERSION_COMPARE_PREPARE)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:1288
T21,82
m4_location(AS_TR_SH)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:1354
T30,81
m4_location(_AS_UNSET_PREPARE)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:539
T23,81
m4_location(AS_DIRNAME)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:773
T14,120
AS_SET_CATFILEcase $2 in
.) $1=$3;;
*)
  case $3 in
  .) $1=$2;;
  [[\\/]]* | ?:[[\\/]]* ) $1=$3;;
  *) $1=$2/$3;;
  esac;;
esac[]dnl

T17,1
_m4_divert(BINSH)0
T20,233
_AS_DETECT_SUGGESTED_m4_defun_pro([_AS_DETECT_SUGGESTED])m4_require([_AS_DETECT_BETTER_SHELL])dnl
m4_expand_once([m4_append([_AS_DETECT_SUGGESTED_BODY], [
($1) || AS_EXIT(1)
])], [_AS_DETECT_SUGGESTED_provide($1)])[]_m4_defun_epi([_AS_DETECT_SUGGESTED])
T7,122
m4_casem4_if([$#], 0, [],
       [$#], 1, [],
       [$#], 2, [$2],
       [$1], [$2], [$3],
       [$0([$1], m4_shiftn(3, $@))])
T15,5
_m4_divert_grow10000
T10,54
m4_includem4_include_unique([$1])dnl
m4_builtin([include], [$1])
T19,168
AS_REQUIRE_SHELL_FN_AS_DETECT_REQUIRED([_AS_SHELL_FN_WORK])dnl
m4_provide_if([AS_SHELL_FN_$1], [],
               [m4_provide([AS_SHELL_FN_$1])m4_divert_text([M4SH-INIT], [$1() {
$2
}])])
T16,619
_AS_TEST_PREPARE_m4_defun_pro([_AS_TEST_PREPARE])if test -x / >/dev/null 2>&1; then
  as_test_x='test -x'
else
  if ls -dL / >/dev/null 2>&1; then
    as_ls_L_option=L
  else
    as_ls_L_option=
  fi
  as_test_x='
    eval sh -c '\''
      if test -d "$[]1"; then
        test -d "$[]1/.";
      else
	case $[]1 in
        -*)set "./$[]1";;
	esac;
	case `ls -ld'$as_ls_L_option' "$[]1" 2>/dev/null` in
	???[[sx]]*):;;*)false;;esac;fi
    '\'' sh
  '
fi
dnl as_executable_p is present for backward compatibility with Libtool
dnl 1.5.22, but it should go away at some point.
as_executable_p=$as_test_x
[]_m4_defun_epi([_AS_TEST_PREPARE])
T17,45
_AS_ECHO_UNQUOTEDecho "$1" >&m4_default([$2], [AS_MESSAGE_FD])
F9,6
m4_definedefine
F9,6
m4_sysvalsysval
T17,17
m4_PACKAGE_STRINGGNU Autoconf 2.61
T15,12
m4_PACKAGE_NAMEGNU Autoconf
T10,165
AS_DIRNAME_m4_defun_pro([AS_DIRNAME])AS_REQUIRE([_$0_PREPARE])dnl
$as_dirname -- $1 ||
_AS_DIRNAME_EXPR([$1]) 2>/dev/null ||
_AS_DIRNAME_SED([$1])[]_m4_defun_epi([AS_DIRNAME])
T16,141
_AS_LINENO_WORKS
  as_lineno_1=$LINENO
  as_lineno_2=$LINENO
  test "x$as_lineno_1" != "x$as_lineno_2" &&
  test "x`expr $as_lineno_1 + 1`" = "x$as_lineno_2"
T15,138
AS_EXECUTABLE_P_m4_defun_pro([AS_EXECUTABLE_P])AS_REQUIRE([_AS_TEST_PREPARE])dnl
{ test -f $1 && AS_TEST_X([$1]); }dnl
[]_m4_defun_epi([AS_EXECUTABLE_P])
T10,54
m4_noquotem4_changequote(-=<{,}>=-)$1-=<{}>=-m4_changequote([,])
T32,81
m4_location(_AS_MKDIR_P_PREPARE)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:963
F10,7
m4_dumpdefdumpdef
T14,122
AS_VAR_PUSHDEFAS_LITERAL_IF([$2],
	       [m4_pushdef([$1], [AS_TR_SH($2)])],
	       [as_$1=AS_TR_SH($2)
m4_pushdef([$1], [$as_[$1]])])
T9,37
m4_qdeltam4_eval(m4_qlen([$1]) - m4_len([$1]))
T12,26
m4_normalizem4_strip(m4_flatten([$1]))
T23,107
m4_expansion_stack_pushm4_pushdef([m4_expansion_stack],
	    [$1]m4_ifdef([m4_expansion_stack], [
m4_defn([m4_expansion_stack])]))
T12,48
m4_re_escapem4_bpatsubst([$1],
	      [[][*+.?\^$]], [\\\&])
T17,186
m4_version_prereqm4_if(m4_version_compare(m4_defn([m4_PACKAGE_VERSION]), [$1]), -1,
       [m4_default([$3],
		   [m4_fatal([Autoconf version $1 or higher is required],
			     63)])],
       [$2])[]dnl

T8,109
m4_defunm4_define([m4_location($1)], m4_location)dnl
m4_define([$1],
	  [_m4_defun_pro([$1])$2[]_m4_defun_epi([$1])])
T31,0
m4_include(autotest/general.m4)
T13,47
AS_LITERAL_IFm4_bmatch(m4_quote($1), [[`$]],
	   [$3], [$2])
T8,56
AS_ERROR{ AS_MESSAGE([error: $1], [2])
   AS_EXIT([$2]); }[]dnl

F11,8
m4_maketempmaketemp
F10,7
m4_builtinbuiltin
T17,201
_AS_UNSET_PREPARE_m4_defun_pro([_AS_UNSET_PREPARE])# Support unset when possible.
if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
  as_unset=unset
else
  as_unset=false
fi
[]_m4_defun_epi([_AS_UNSET_PREPARE])
T7,99
AS_LN_S_m4_defun_pro([AS_LN_S])AS_REQUIRE([_AS_LN_S_PREPARE])dnl
$as_ln_s $1 $2
[]_m4_defun_epi([AS_LN_S])
T20,81
m4_location(AS_CASE)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:476
T14,160
m4_divert_pushm4_pushdef([m4_divert_stack], m4_location[: $0: $1]_m4_divert_n_stack)dnl
m4_pushdef([_m4_divert_diversion], [$1])dnl
m4_builtin([divert], _m4_divert([$1]))dnl

T12,64
AT_COPYRIGHTAS_COPYRIGHT([$1])[]dnl
m4_divert_text([VERSION_NOTICES],
[
$1])
T30,82
m4_location(_AS_TR_SH_PREPARE)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:1341
T12,55
m4_copy_unm4m4_copy([$1], m4_bpatsubst([$1], [^m4_\(.*\)], [[\1]]))
T30,86
m4_location(AT_ARG_OPTION_ARG)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/autotest/general.m4:1139
T9,58
m4_appendm4_define([$1],
	   m4_ifdef([$1], [m4_defn([$1])$3])[$2])
T27,82
m4_location(_AS_TR_PREPARE)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:1386
T17,40
AT_CHECK_NOESCAPE_AT_CHECK([$1],[$2],[$3],[$4],[$5],[$6])
F11,8
m4_translittranslit
F9,6
m4_substrsubstr
T29,81
m4_location(_AS_DIRNAME_EXPR)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:747
T20,85
m4_location(m4_join)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sugar.m4:1489
T21,1
_m4_divert(M4SH-INIT)5
T16,4
_m4_divert(BODY)1000
T7,304
AS_INITm4_init

# Forbidden tokens and exceptions.
m4_pattern_forbid([^_?AS_])

# Bangshe and minimal initialization.
m4_divert_text([BINSH], [@%:@! /bin/sh])
m4_divert_text([M4SH-SANITIZE], [AS_SHELL_SANITIZE])
AS_REQUIRE([_AS_SHELL_FN_SPY])

# Let's go!
m4_divert_pop([KILL])[]dnl
m4_divert_push([BODY])[]dnl

T9,75
m4_beforem4_provide_if([$2],
	       [m4_warn([syntax], [$2 was called before $1])])
T9,26
m4_ifndefm4_ifdef([$1], [$3], [$2])
T26,1
_m4_divert(HEADER-COMMENT)2
T13,26
m4_cr_LETTERSABCDEFGHIJKLMNOPQRSTUVWXYZ
T16,393
_m4_require_callm4_define([_m4_divert_grow], m4_decr(_m4_divert_grow))dnl
m4_divert_push(_m4_divert_grow)dnl
m4_default([$2], [$1])
m4_provide_if([$1],
	      [],
	      [m4_warn([syntax],
		       [$1 is m4_require'd but not m4_defun'd])])dnl
m4_divert(m4_defn([_m4_divert_dump]))dnl
m4_undivert(_m4_divert_grow)dnl
m4_divert_pop(_m4_divert_grow)dnl
m4_define([_m4_divert_grow], m4_incr(_m4_divert_grow))dnl

T7,23622
AT_INITm4_pattern_forbid([^_?AT_])
m4_define([AT_TESTSUITE_NAME],
	  m4_defn([AT_PACKAGE_STRING])[ test suite]m4_ifval([$1], [: $1]))
m4_define([AT_ordinal], 0)
m4_define([AT_banner_ordinal], 0)
m4_define([AT_groups_all], [])
m4_define([AT_help_all], [])
AS_INIT
AT_COPYRIGHT(
[Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006 Free Software
Foundation, Inc.
This test suite is free software; the Free Software Foundation gives
unlimited permission to copy, distribute and modify it.])
AS_PREPARE
m4_divert_push([DEFAULTS])dnl

SHELL=${CONFIG_SHELL-/bin/sh}

# How were we run?
at_cli_args="$[@]"

# Load the config file.
for at_file in atconfig atlocal
do
  test -r $at_file || continue
  . ./$at_file || AS_ERROR([invalid content: $at_file])
done

# Autoconf <=2.59b set at_top_builddir instead of at_top_build_prefix:
: ${at_top_build_prefix=$at_top_builddir}

# atconfig delivers names relative to the directory the test suite is
# in, but the groups themselves are run in testsuite-dir/group-dir.
if test -n "$at_top_srcdir"; then
  builddir=../..
  for at_dir in srcdir top_srcdir top_build_prefix
  do
    at_val=AS_VAR_GET([at_$at_dir])
    AS_VAR_SET([$at_dir], [$at_val/../..])
  done
fi

# Not all shells have the 'times' builtin; the subshell is needed to make
# sure we discard the 'times: not found' message from the shell.
at_times_p=false
(times) >/dev/null 2>&1 && at_times_p=:

# CLI Arguments to pass to the debugging scripts.
at_debug_args=
# -e sets to true
at_errexit_p=false
# Shall we be verbose?
at_verbose=:
at_quiet=echo

# Shall we keep the debug scripts?  Must be `:' when the suite is
# run by a debug script, so that the script doesn't remove itself.
at_debug_p=false
# Display help message?
at_help_p=false
# Display the version message?
at_version_p=false
# List test groups?
at_list_p=false
# Test groups to run
at_groups=

# The directory we are in.
at_dir=`pwd`
# The directory the whole suite works in.
# Should be absolutely to let the user `cd' at will.
at_suite_dir=$at_dir/$as_me.dir
# The file containing the suite.
at_suite_log=$at_dir/$as_me.log
# The file containing the location of the last AT_CHECK.
at_check_line_file=$at_suite_dir/at-check-line
# The file containing the exit status of the last command.
at_status_file=$at_suite_dir/at-status
# The files containing the output of the tested commands.
at_stdout=$at_suite_dir/at-stdout
at_stder1=$at_suite_dir/at-stder1
at_stderr=$at_suite_dir/at-stderr
# The file containing dates.
at_times_file=$at_suite_dir/at-times
m4_divert_pop([DEFAULTS])dnl
m4_wrap([m4_divert_text([DEFAULTS],
[
# List of the tested programs.
at_tested='m4_ifdef([AT_tested], [AT_tested])'
# List of the all the test groups.
at_groups_all='AT_groups_all'
# As many question marks as there are digits in the last test group number.
# Used to normalize the test group numbers so that `ls' lists them in
# numerical order.
at_format='m4_bpatsubst(m4_defn([AT_ordinal]), [.], [?])'
# Description of all the test groups.
at_help_all="AS_ESCAPE(m4_defn([AT_help_all]))"])])dnl
m4_divert_push([PARSE_ARGS])dnl

at_prev=
for at_option
do
  # If the previous option needs an argument, assign it.
  if test -n "$at_prev"; then
    at_option=$at_prev=$at_option
    at_prev=
  fi

  case $at_option in
  *=*) at_optarg=`expr "x$at_option" : 'x[[^=]]*=\(.*\)'` ;;
  *)   at_optarg= ;;
  esac

  # Accept the important Cygnus configure options, so we can diagnose typos.

  case $at_option in
    --help | -h )
	at_help_p=:
	;;

    --list | -l )
	at_list_p=:
	;;

    --version | -V )
	at_version_p=:
	;;

    --clean | -c )
	test -d "$at_suite_dir" &&
	  find "$at_suite_dir" -type d ! -perm -700 -exec chmod u+rwx \{\} \;
	rm -f -r "$at_suite_dir" "$at_suite_log"
	exit 0
	;;

    --debug | -d )
	at_debug_p=:
	;;

    --errexit | -e )
	at_debug_p=:
	at_errexit_p=:
	;;

    --verbose | -v )
	at_verbose=echo; at_quiet=:
	;;

    --trace | -x )
	at_traceon='set -x'; at_traceoff='set +x'
	;;

    [[0-9] | [0-9][0-9] | [0-9][0-9][0-9] | [0-9][0-9][0-9][0-9]])
	at_groups="$at_groups$at_option "
	;;

    # Ranges
    [[0-9]- | [0-9][0-9]- | [0-9][0-9][0-9]- | [0-9][0-9][0-9][0-9]-])
	at_range_start=`echo $at_option |tr -d X-`
	at_range=`echo " $at_groups_all " | \
	  sed -e 's/^.* \('$at_range_start' \)/\1/'`
	at_groups="$at_groups$at_range "
	;;

    [-[0-9] | -[0-9][0-9] | -[0-9][0-9][0-9] | -[0-9][0-9][0-9][0-9]])
	at_range_end=`echo $at_option |tr -d X-`
	at_range=`echo " $at_groups_all " | \
	  sed -e 's/\( '$at_range_end'\) .*$/\1/'`
	at_groups="$at_groups$at_range "
	;;

    [[0-9]-[0-9] | [0-9]-[0-9][0-9] | [0-9]-[0-9][0-9][0-9]] | \
    [[0-9]-[0-9][0-9][0-9][0-9] | [0-9][0-9]-[0-9][0-9]] | \
    [[0-9][0-9]-[0-9][0-9][0-9] | [0-9][0-9]-[0-9][0-9][0-9][0-9]] | \
    [[0-9][0-9][0-9]-[0-9][0-9][0-9]] | \
    [[0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]] | \
    [[0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]] )
	at_range_start=`expr $at_option : '\(.*\)-'`
	at_range_end=`expr $at_option : '.*-\(.*\)'`
	if test $at_range_start -gt $at_range_end; then
	  at_tmp=$at_range_end
	  at_range_end=$at_range_start
	  at_range_start=$at_tmp
	fi
	at_range=`echo " $at_groups_all " | \
	  sed -e 's/^.*\( '$at_range_start' \)/\1/' \
	      -e 's/\( '$at_range_end'\) .*$/\1/'`
	at_groups="$at_groups$at_range "
	;;

    # Keywords.
    --keywords | -k )
	at_prev=--keywords
	;;
    --keywords=* )
	at_groups_selected=$at_help_all
	at_save_IFS=$IFS
	IFS=,
	set X $at_optarg
	shift
	IFS=$at_save_IFS
	for at_keyword
	do
	  at_invert=
	  case $at_keyword in
	  '!'*)
	    at_invert="-v"
	    at_keyword=`expr "X$at_keyword" : 'X!\(.*\)'`
	    ;;
	  esac
	  # It is on purpose that we match the test group titles too.
	  at_groups_selected=`echo "$at_groups_selected" |
	      grep -i $at_invert ["^[1-9][^;]*;.*[; ]$at_keyword[ ;]"]`
	done
	at_groups_selected=`echo "$at_groups_selected" | sed 's/;.*//'`
	# Smash the newlines.
	at_groups="$at_groups`echo $at_groups_selected` "
	;;
m4_divert_pop([PARSE_ARGS])dnl
dnl Process *=* last to allow for user specified --option=* type arguments.
m4_divert_push([PARSE_ARGS_END])dnl

    *=*)
	at_envvar=`expr "x$at_option" : 'x\([[^=]]*\)='`
	# Reject names that are not valid shell variable names.
	expr "x$at_envvar" : "[.*[^_$as_cr_alnum]]" >/dev/null &&
	  AS_ERROR([invalid variable name: $at_envvar])
	at_value=`echo "$at_optarg" | sed "s/'/'\\\\\\\\''/g"`
	eval "$at_envvar='$at_value'"
	export $at_envvar
	# Propagate to debug scripts.
	at_debug_args="$at_debug_args $at_envvar='$at_value'"
	;;

     *) echo "$as_me: invalid option: $at_option" >&2
	echo "Try \`$[0] --help' for more information." >&2
	exit 1
	;;
  esac
done

# Selected test groups.
if test -z "$at_groups"; then
  at_groups=$at_groups_all
else
  # Sort the tests, removing duplicates:
  at_groups=`echo $at_groups | tr ' ' "$as_nl" | sort -nu`
  # and add banners.  (Passing at_groups_all is tricky--see the comment
  # starting with "Passing at_groups is tricky.")
  at_groups=`echo "$at_groups$as_nl $at_groups_all" |
    awk ['BEGIN { FS = "@" } # Effectively switch off field splitting.
	/^$/ { next }  # Ignore the empty line.
	!/ / { groups++; selected[$ 0] = 1; next }
	# The last line, containing at_groups_all.
	{
		n = split($ 0, a, " ")
		# If there are several tests, select their banners:
		if (groups > 1) {
			for (i = 1; i <= n; i++) {
				if (a[i] ~ /^banner-/)
					banner = a[i]
				else if (banner != "" && selected[a[i]] == 1)
					selected[banner] = 1
			}
		}
		for (i = 1; i <= n; i++)
			if (selected[a[i]] == 1)
				list = list " " a[i]
		print list
	}']`
fi
m4_divert_pop([PARSE_ARGS_END])dnl
m4_divert_push([HELP])dnl

# Help message.
if $at_help_p; then
  cat <<_ATEOF
Usage: $[0] [[OPTION]... [VARIABLE=VALUE]... [TESTS]]

Run all the tests, or the selected TESTS, given by numeric ranges, and
save a detailed log file.  Upon failure, create debugging scripts.

You should not change environment variables unless explicitly passed
as command line arguments.  Set \`AUTOTEST_PATH' to select the executables
to exercise.  Each relative directory is expanded as build and source
directories relatively to the top level of this distribution.  E.g.,

  $ $[0] AUTOTEST_PATH=bin

possibly amounts into

  PATH=/tmp/foo-1.0/bin:/src/foo-1.0/bin:\$PATH
_ATEOF
m4_divert_pop([HELP])dnl
m4_divert_push([HELP_MODES])dnl
cat <<_ATEOF

Operation modes:
  -h, --help     print the help message, then exit
  -V, --version  print version number, then exit
  -c, --clean    remove all the files this test suite might create and exit
  -l, --list     describes all the tests, or the selected TESTS
_ATEOF
m4_divert_pop([HELP_MODES])dnl
m4_divert_push([HELP_TUNING])dnl
cat <<_ATEOF

Execution tuning:
  -k, --keywords=KEYWORDS
	         select the tests matching all the comma-separated KEYWORDS
	         multiple \`-k' accumulate; prefixed \`!' negates a KEYWORD
  -e, --errexit  abort as soon as a test fails; implies --debug
  -v, --verbose  force more detailed output
	         default for debugging scripts
  -d, --debug    inhibit clean up and top-level logging
	         default for debugging scripts
  -x, --trace    enable tests shell tracing
_ATEOF
m4_divert_pop([HELP_TUNING])dnl
m4_divert_push([HELP_END])dnl
cat <<_ATEOF

Report bugs to <AT_PACKAGE_BUGREPORT>.
_ATEOF
  exit 0
fi

# List of tests.
if $at_list_p; then
  cat <<_ATEOF
AT_TESTSUITE_NAME test groups:

 NUM: FILE-NAME:LINE     TEST-GROUP-NAME
      KEYWORDS

_ATEOF
  # Passing at_groups is tricky.  We cannot use it to form a literal string
  # or regexp because of the limitation of AIX awk.  And Solaris' awk
  # doesn't grok more than 99 fields in a record, so we have to use `split'.
  echo "$at_groups$as_nl$at_help_all" |
    awk 'BEGIN { FS = ";" }
	 NR == 1 {
	   for (n = split($ 0, a, " "); n; n--) selected[[a[n]]] = 1
	   next
	 }
	 {
	   if (selected[[$ 1]]) {
	     printf " %3d: %-18s %s\n", $ 1, $ 2, $ 3
	     if ($ 4) printf "      %s\n", $ 4
	   }
	 }'
  exit 0
fi
m4_divert_pop([HELP_END])dnl
m4_divert_push([VERSION])dnl
if $at_version_p; then
  echo "$as_me (AT_PACKAGE_STRING)"
  cat <<\_ACEOF
m4_divert_pop([VERSION])dnl
m4_divert_push([VERSION_END])dnl
_ACEOF
  exit 0
fi
m4_divert_pop([VERSION_END])dnl
m4_divert_push([PREPARE_TESTS])dnl

# Don't take risks: use only absolute directories in PATH.
#
# For stand-alone test suites, AUTOTEST_PATH is relative to `.'.
#
# For embedded test suites, AUTOTEST_PATH is relative to the top level
# of the package.  Then expand it into build/src parts, since users
# may create executables in both places.
AUTOTEST_PATH=`echo $AUTOTEST_PATH | sed "s&:&$PATH_SEPARATOR&g"`
at_path=
_AS_PATH_WALK([$AUTOTEST_PATH $PATH],
[test -n "$at_path" && at_path=$at_path$PATH_SEPARATOR
case $as_dir in
  [[\\/]]* | ?:[[\\/]]* )
    at_path=$at_path$as_dir
    ;;
  * )
    if test -z "$at_top_build_prefix"; then
      # Stand-alone test suite.
      at_path=$at_path$as_dir
    else
      # Embedded test suite.
      at_path=$at_path$at_top_build_prefix$as_dir$PATH_SEPARATOR
      at_path=$at_path$at_top_srcdir/$as_dir
    fi
    ;;
esac])

# Now build and simplify PATH.
#
# There might be directories that don't exist, but don't redirect
# builtins' (eg., cd) stderr directly: Ultrix's sh hates that.
PATH=
_AS_PATH_WALK([$at_path],
[as_dir=`(cd "$as_dir" && pwd) 2>/dev/null`
test -d "$as_dir" || continue
case $PATH in
	          $as_dir                 | \
	          $as_dir$PATH_SEPARATOR* | \
  *$PATH_SEPARATOR$as_dir                 | \
  *$PATH_SEPARATOR$as_dir$PATH_SEPARATOR* ) ;;

  '') PATH=$as_dir ;;
   *) PATH=$PATH$PATH_SEPARATOR$as_dir ;;
esac])
export PATH

# Setting up the FDs.
# 5 is the log file.  Not to be overwritten if `-d'.
m4_define([AS_MESSAGE_LOG_FD], [5])
if $at_debug_p; then
  at_suite_log=/dev/null
else
  : >"$at_suite_log"
fi
exec AS_MESSAGE_LOG_FD>>"$at_suite_log"

# Banners and logs.
AS_BOX(m4_defn([AT_TESTSUITE_NAME])[.])
{
  AS_BOX(m4_defn([AT_TESTSUITE_NAME])[.])
  echo

  echo "$as_me: command line was:"
  echo "  $ $[0] $at_cli_args"
  echo

  # Try to find a few ChangeLogs in case it might help determining the
  # exact version.  Use the relative dir: if the top dir is a symlink,
  # find will not follow it (and options to follow the links are not
  # portable), which would result in no output here.
  if test -n "$at_top_srcdir"; then
    AS_BOX([ChangeLogs.])
    echo
    for at_file in `find "$at_top_srcdir" -name ChangeLog -print`
    do
      echo "$as_me: $at_file:"
      sed 's/^/| /;10q' $at_file
      echo
    done

    AS_UNAME
    echo
  fi

  # Contents of the config files.
  for at_file in atconfig atlocal
  do
    test -r $at_file || continue
    echo "$as_me: $at_file:"
    sed 's/^/| /' $at_file
    echo
  done

  AS_BOX([Tested programs.])
  echo
} >&AS_MESSAGE_LOG_FD

# Report what programs are being tested.
for at_program in : $at_tested
do
  test "$at_program" = : && continue
  _AS_PATH_WALK([$PATH], [test -f "$as_dir/$at_program" && break])
  if test -f "$as_dir/$at_program"; then
    {
      echo "$at_srcdir/AT_LINE: $as_dir/$at_program --version"
      "$as_dir/$at_program" --version
      echo
    } >&AS_MESSAGE_LOG_FD 2>&1
  else
    AS_ERROR([cannot find $at_program])
  fi
done

{
  AS_BOX([Running the tests.])
} >&AS_MESSAGE_LOG_FD

at_start_date=`date`
at_start_time=`date +%s 2>/dev/null`
echo "$as_me: starting at: $at_start_date" >&AS_MESSAGE_LOG_FD
at_xpass_list=
at_xfail_list=
at_pass_list=
at_fail_list=
at_skip_list=
at_group_count=0
m4_divert_pop([PREPARE_TESTS])dnl
m4_divert_push([TESTS])dnl

# Create the master directory if it doesn't already exist.
test -d "$at_suite_dir" ||
  mkdir "$at_suite_dir" ||
  AS_ERROR([cannot create '$at_suite_dir'])

# Can we diff with `/dev/null'?  DU 5.0 refuses.
if diff /dev/null /dev/null >/dev/null 2>&1; then
  at_devnull=/dev/null
else
  at_devnull=$at_suite_dir/devnull
  >"$at_devnull"
fi

# Use `diff -u' when possible.
if at_diff=`diff -u "$at_devnull" "$at_devnull" 2>&1` && test -z "$at_diff"
then
  at_diff='diff -u'
else
  at_diff=diff
fi


for at_group in $at_groups
do
  # Be sure to come back to the top test directory.
  cd "$at_suite_dir"

  case $at_group in
    banner-*)
      at_group_log=$at_suite_log
      ;;

    *)
      at_group_normalized=$at_group
      _AT_NORMALIZE_TEST_GROUP_NUMBER(at_group_normalized)

      # Create a fresh directory for the next test group, and enter.
      at_group_dir=$at_suite_dir/$at_group_normalized
      at_group_log=$at_group_dir/$as_me.log
      if test -d "$at_group_dir"; then
	find "$at_group_dir" -type d ! -perm -700 -exec chmod u+rwx \{\} \;
	rm -fr "$at_group_dir"
      fi
      # Be tolerant if the above `rm' was not able to remove the directory.
      AS_MKDIR_P([$at_group_dir])
      cd $at_group_dir
      ;;
  esac

  echo 0 > "$at_status_file"

  # Clearly separate the test groups when verbose.
  test $at_group_count != 0 && $at_verbose

  # In verbose mode, append to the log file *and* show on
  # the standard output; in quiet mode only write to the log
  if test $at_verbose = echo; then
    at_tee_pipe='tee -a "$at_group_log"'
  else
    at_tee_pipe='cat >> "$at_group_log"'
  fi

  case $at_group in
dnl Test groups inserted here (TESTS).
m4_divert_pop([TESTS])[]dnl
m4_divert_push([TESTS_END])[]dnl

  * )
    echo "$as_me: no such test group: $at_group" >&2
    continue
    ;;
  esac

  # Be sure to come back to the suite directory, in particular
  # since below we might `rm' the group directory we are in currently.
  cd "$at_suite_dir"

  case $at_group in
    banner-*) ;;
    *)
      if test ! -f "$at_check_line_file"; then
	sed "s/^ */$as_me: warning: /" <<_ATEOF
	A failure happened in a test group before any test could be
	run. This means that test suite is improperly designed.  Please
	report this failure to <AT_PACKAGE_BUGREPORT>.
_ATEOF
	echo "$at_setup_line" >"$at_check_line_file"
      fi
      at_group_count=`expr 1 + $at_group_count`
      $at_verbose $ECHO_N "$at_group. $at_setup_line: $ECHO_C"
      echo $ECHO_N "$at_group. $at_setup_line: $ECHO_C" >> "$at_group_log"
      case $at_xfail:$at_status in
	yes:0)
	    at_msg="UNEXPECTED PASS"
	    at_xpass_list="$at_xpass_list $at_group"
	    at_errexit=$at_errexit_p
	    ;;
	no:0)
	    at_msg="ok"
	    at_pass_list="$at_pass_list $at_group"
	    at_errexit=false
	    ;;
	*:77)
	    at_msg='skipped ('`cat "$at_check_line_file"`')'
	    at_skip_list="$at_skip_list $at_group"
	    at_errexit=false
	    ;;
	yes:*)
	    at_msg='expected failure ('`cat "$at_check_line_file"`')'
	    at_xfail_list="$at_xfail_list $at_group"
	    at_errexit=false
	    ;;
	no:*)
	    at_msg='FAILED ('`cat "$at_check_line_file"`')'
	    at_fail_list="$at_fail_list $at_group"
	    at_errexit=$at_errexit_p
	    ;;
      esac
      # Make sure there is a separator even with long titles.
      echo " $at_msg"
      at_log_msg="$at_group. $at_desc ($at_setup_line): $at_msg"
      case $at_status in
	0|77)
	  # $at_times_file is only available if the group succeeded.
	  # We're not including the group log, so the success message
	  # is written in the global log separately.  But we also
	  # write to the group log in case they're using -d.
	  if test -f "$at_times_file"; then
	    at_log_msg="$at_log_msg	("`sed 1d "$at_times_file"`')'
	    rm -f "$at_times_file"
          fi
	  echo "$at_log_msg" >> "$at_group_log"
	  echo "$at_log_msg" >&AS_MESSAGE_LOG_FD

	  # Cleanup the group directory, unless the user wants the files.
	  if $at_debug_p ; then
	    _AT_CREATE_DEBUGGING_SCRIPT
	  elif test -d "$at_group_dir"; then
	    find "$at_group_dir" -type d ! -perm -700 -exec chmod u+rwx \{\} \;
	    rm -fr "$at_group_dir"
	  fi
	  ;;
	*)
	  # Upon failure, include the log into the testsuite's global
	  # log.  The failure message is written in the group log.  It
	  # is later included in the global log.
	  echo "$at_log_msg" >> "$at_group_log"

	  # Upon failure, keep the group directory for autopsy, and
	  # create the debugging script.
	  _AT_CREATE_DEBUGGING_SCRIPT
	  $at_errexit && break
	  ;;
      esac
      ;;
  esac
done

# Back to the top directory.
cd "$at_dir"

# Compute the duration of the suite.
at_stop_date=`date`
at_stop_time=`date +%s 2>/dev/null`
echo "$as_me: ending at: $at_stop_date" >&AS_MESSAGE_LOG_FD
case $at_start_time,$at_stop_time in
  [[0-9]*,[0-9]*])
    at_duration_s=`expr $at_stop_time - $at_start_time`
    at_duration_m=`expr $at_duration_s / 60`
    at_duration_h=`expr $at_duration_m / 60`
    at_duration_s=`expr $at_duration_s % 60`
    at_duration_m=`expr $at_duration_m % 60`
    at_duration="${at_duration_h}h ${at_duration_m}m ${at_duration_s}s"
    echo "$as_me: test suite duration: $at_duration" >&AS_MESSAGE_LOG_FD
    ;;
esac

# Wrap up the test suite with summary statistics.
at_skip_count=`set dummy $at_skip_list; shift; echo $[@%:@]`
at_fail_count=`set dummy $at_fail_list; shift; echo $[@%:@]`
at_xpass_count=`set dummy $at_xpass_list; shift; echo $[@%:@]`
at_xfail_count=`set dummy $at_xfail_list; shift; echo $[@%:@]`

at_run_count=`expr $at_group_count - $at_skip_count`
at_unexpected_count=`expr $at_xpass_count + $at_fail_count`
at_total_fail_count=`expr $at_xfail_count + $at_fail_count`

echo
AS_BOX([Test results.])
echo
{
  echo
  AS_BOX([Test results.])
  echo
} >&AS_MESSAGE_LOG_FD

dnl
dnl FIXME: this code is as far from i18n-cleanness as man
dnl could imagine...
dnl
if test $at_run_count = 1; then
  at_result="1 test"
  at_were=was
else
  at_result="$at_run_count tests"
  at_were=were
fi
if $at_errexit_p && test $at_unexpected_count != 0; then
  if test $at_xpass_count = 1; then
    at_result="$at_result $at_were run, one passed"
  else
    at_result="$at_result $at_were run, one failed"
  fi
  at_result="$at_result unexpectedly and inhibited subsequent tests."
else
  # Don't you just love exponential explosion of the number of cases?
  case $at_xpass_count:$at_fail_count:$at_xfail_count in
    # So far, so good.
    0:0:0) at_result="$at_result $at_were successful." ;;
    0:0:*) at_result="$at_result behaved as expected." ;;

    # Some unexpected failures
    0:*:0) at_result="$at_result $at_were run,
$at_fail_count failed unexpectedly." ;;

    # Some failures, both expected and unexpected
    0:*:1) at_result="$at_result $at_were run,
$at_total_fail_count failed ($at_xfail_count expected failure)." ;;
    0:*:*) at_result="$at_result $at_were run,
$at_total_fail_count failed ($at_xfail_count expected failures)." ;;

    # No unexpected failures, but some xpasses
    *:0:*) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly." ;;

    # No expected failures, but failures and xpasses
    *:1:0) at_result="$at_result $at_were run,
$at_unexpected_count did not behave as expected ($at_fail_count unexpected failure)." ;;
    *:*:0) at_result="$at_result $at_were run,
$at_unexpected_count did not behave as expected ($at_fail_count unexpected failures)." ;;

    # All of them.
    *:*:1) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly,
$at_total_fail_count failed ($at_xfail_count expected failure)." ;;
    *:*:*) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly,
$at_total_fail_count failed ($at_xfail_count expected failures)." ;;
  esac

  if test $at_skip_count = 0 && test $at_run_count -gt 1; then
    at_result="All $at_result"
  fi
fi

# Now put skips in the mix.
case $at_skip_count in
  0) ;;
  1) at_result="$at_result
1 test was skipped." ;;
  *) at_result="$at_result
$at_skip_count tests were skipped." ;;
esac

if test $at_unexpected_count = 0; then
  echo "$at_result"
  echo "$at_result" >&AS_MESSAGE_LOG_FD
else
  echo "ERROR: $at_result" >&2
  echo "ERROR: $at_result" >&AS_MESSAGE_LOG_FD
  {
    echo
    AS_BOX([Summary of the failures.])

    # Summary of failed and skipped tests.
    if test $at_fail_count != 0; then
      echo "Failed tests:"
      $SHELL "$[0]" $at_fail_list --list
      echo
    fi
    if test $at_skip_count != 0; then
      echo "Skipped tests:"
      $SHELL "$[0]" $at_skip_list --list
      echo
    fi
    if test $at_xpass_count != 0; then
      echo "Unexpected passes:"
      $SHELL "$[0]" $at_xpass_list --list
      echo
    fi
    if test $at_fail_count != 0; then
      AS_BOX([Detailed failed tests.])
      echo
      for at_group in $at_fail_list
      do
        at_group_normalized=$at_group
        _AT_NORMALIZE_TEST_GROUP_NUMBER(at_group_normalized)
        cat "$at_suite_dir/$at_group_normalized/$as_me.log"
        echo
      done
      echo
    fi
    if test -n "$at_top_srcdir"; then
      AS_BOX([${at_top_build_prefix}config.log])
      sed 's/^/| /' ${at_top_build_prefix}config.log
      echo
    fi
  } >&AS_MESSAGE_LOG_FD

  AS_BOX([$as_me.log was created.])

  echo
  echo "Please send \`${at_testdir+${at_testdir}/}$as_me.log' and all information you think might help:"
  echo
  echo "   To: <AT_PACKAGE_BUGREPORT>"
  echo "   Subject: @<:@AT_PACKAGE_STRING@:>@ $as_me:dnl
$at_fail_list${at_fail_list:+ failed${at_xpass_list:+,}}dnl
$at_xpass_list${at_xpass_list:+ passed unexpectedly}"
  echo
  if test $at_debug_p = false; then
    echo
    echo 'You may investigate any problem if you feel able to do so, in which'
    echo 'case the test suite provides a good starting point.  Its output may'
    echo "be found below \`${at_testdir+${at_testdir}/}$as_me.dir'."
    echo
  fi
    exit 1
fi

exit 0
m4_divert_pop([TESTS_END])dnl
dnl End of AT_INIT: divert to KILL, only test groups are to be
dnl output, the rest is ignored.  Current diversion is BODY, inherited
dnl from M4sh.
m4_divert_pop([BODY])
m4_divert_push([KILL])

T9,228
_m4_splitm4_changequote(``, '')dnl
[dnl Can't use m4_default here instead of m4_if, because m4_default uses
dnl [ and ] as quotes.
m4_bpatsubst(````$1'''',
	     m4_if(``$2'',, ``[	 ]+'', ``$2''),
	     ``], ['')]dnl
m4_changequote([, ])
T20,3
_m4_divert(HELP_END)304
T7,129
m4_join_m4_defun_pro([m4_join])m4_case([$#],
	 [1], [],
	 [2], [[$2]],
	 [[$2][$1]$0([$1], m4_shiftn(2, $@))])[]_m4_defun_epi([m4_join])
F7,6
m4_exitm4exit
T20,912
_AT_DECIDE_TRACEABLEdnl Utility macros.
m4_pushdef([at_lf], [
])[]dnl
dnl
dnl Examine COMMANDS for a reason to never trace COMMANDS.
m4_pushdef([at_reason],
	   m4_bmatch([$1],
	             [`.*`], [[a `...` command substitution]],
	             [\$(],  [[a $(...) command substitution]],
	             [\${],  [[a ${...} parameter expansion]],
	             at_lf,  [[an embedded newline]],
		     [[]]dnl No reason.
))dnl
dnl
m4_ifval(m4_defn([at_reason]),
[echo 'Not enabling shell tracing (command contains ]m4_defn([at_reason])[)'],
[m4_bmatch([$1], [\$],
dnl COMMANDS may contain parameter expansions; expand them at runtime.
[case "AS_ESCAPE([$1], [`"\])" in
        *'
'*) echo 'Not enabling shell tracing (command contains an embedded newline)' ;;
 *) at_trace_this=yes ;;
    esac],
dnl We know at build time that tracing COMMANDS is always safe.
[at_trace_this=yes])])[]dnl
m4_popdef([at_lf])[]dnl
m4_popdef([at_reason])
T11,40
m4_undivertm4_builtin([undivert], _m4_divert([$1]))
T5,154
AS_IF_m4_defun_pro([AS_IF])m4_ifval([$2$3],
[if $1; then
  m4_default([$2], [:])
m4_ifval([$3], [_$0(m4_shiftn(2, $@))])[]dnl
fi
])dnl
[]_m4_defun_epi([AS_IF])
F5,6
m4_ififelse
T10,0
m4_symbols
T6,79
AS_BOXAS_LITERAL_IF([$1],
	       [_AS_BOX_LITERAL($@)],
	       [_AS_BOX_INDIR($@)])
T22,3
_m4_divert(PARSE_ARGS)201
T12,51
_AS_ECHO_LOG_AS_ECHO([$as_me:$LINENO: $1], [AS_MESSAGE_LOG_FD])
T8,65
m4_ifsetm4_ifdef([$1],
	  [m4_ifval(m4_defn([$1]), [$2], [$3])],
	  [$3])
T23,3
_m4_divert(HELP_TUNING)302
T27,1
_m4_divert(HEADER-REVISION)1
T15,36
_AS_BOX_LITERALcat <<\_ASBOX
m4_text_box($@)
_ASBOX
T13,116
_AS_BOX_INDIRsed 'h;s/./m4_default([$2], [-])/g;s/^.../@%:@@%:@ /;s/...$/ @%:@@%:@/;p;x;p;x' <<_ASBOX
@%:@@%:@ $1 @%:@@%:@
_ASBOX
T17,128
_m4_dumpdefs_downm4_ifdef([_m4_dumpdefs],
	  [m4_pushdef([$1], m4_defn([_m4_dumpdefs]))dnl
m4_popdef([_m4_dumpdefs])dnl
_m4_dumpdefs_down([$1])])
T14,2438
_AT_ARG_OPTION_m4_defun_pro([_AT_ARG_OPTION])m4_divert_once([HELP_OTHER],
[cat <<_ATEOF

Other options:
_ATEOF
])dnl m4_divert_once HELP_OTHER
m4_divert_text([HELP_OTHER],
[cat <<_ATEOF
$2
_ATEOF])dnl
dnl Turn our options into our desired strings
m4_ifdef([AT_first_option],[m4_undefine([AT_first_option])])dnl
m4_ifdef([AT_case],[m4_undefine([AT_case])])dnl
m4_ifdef([AT_case_no],[m4_undefine([AT_case_no])])dnl
m4_ifdef([AT_case_arg],[m4_undefine([AT_case_arg])])dnl
m4_foreach([AT_option], m4_split(m4_normalize([$1]),[[ \|]+]),
[m4_define_default([AT_first_option],AT_option)dnl
m4_append([AT_case],m4_if(m4_len(AT_option),1,[],[-])[-]AT_option, [ | ])dnl
m4_append([AT_case_no],[--no]AT_option, [ | ])dnl
m4_append([AT_case_arg],m4_if(m4_len(AT_option),1,[],[-])[-]AT_option[=*], [ | ])dnl
])dnl m4_foreach AT_option
dnl keep track so we or the user may process ACTION-IF-NOT-GIVEN
m4_divert_once([PARSE_ARGS_BEGIN],
[
##
## Set up package specific options.
##
])dnl
m4_divert_text([PARSE_ARGS_BEGIN],
[dnl Provide a default value for options without arguments.
m4_ifvaln([$3],,[at_arg_[]m4_bpatsubst([AT_first_option], -, _)=false])dnl
at_arg_given_[]m4_bpatsubst([AT_first_option], -, _)=false
])dnl m4_divert_text DEFAULTS
m4_ifval([$3],[m4_divert_once([PARSE_ARGS_END],
[
##
## Verify our last option didn't require an argument
##
AS_IF([test -n "$at_prev"],[AS_ERROR([`$at_prev' requires an argument.])])])])
m4_divert_text([PARSE_ARGS],
[dnl Parse the options and args when necessary.
m4_ifvaln([$3],
[    AT_case )
	at_prev=--m4_bpatsubst([AT_first_option], -, _)
	;;
    AT_case_arg )
	at_arg_[]m4_bpatsubst([AT_first_option], -, _)=$at_optarg
	at_arg_given_[]m4_bpatsubst([AT_first_option], -, _)=:
	$4
	;;],
[    AT_case )
	at_optarg=:
	at_arg_[]m4_bpatsubst([AT_first_option], -, _)=:
	at_arg_given_[]m4_bpatsubst([AT_first_option], -, _)=:
	m4_ifval([$4],[$4])dnl
	;;
    AT_case_no )
	at_optarg=false
	at_arg_[]m4_bpatsubst([AT_first_option], -, _)=false
	at_arg_given_[]m4_bpatsubst([AT_first_option], -, _)=:
	m4_ifval([$4],[$4])dnl
	;;])dnl m4_ifvaln $3
])dnl m4_divert_text PARSE_ARGS
m4_ifvaln([$5],
[m4_divert_once([PARSE_ARGS_END],
[
##
## Process package specific options when _not_ supplied.
##])dnl m4_divert_once PARSE_ARGS_END
m4_divert_text([PARSE_ARGS_END],
[
AS_IF([$at_arg_given_[]m4_bpatsubst([AT_first_option], -, _)],,[$5])dnl
])dnl m4_divert_text PARSE_ARGS_END
])dnl m4_ifvaln $5
[]_m4_defun_epi([_AT_ARG_OPTION])
T8,151
AS_UNSET_m4_defun_pro([AS_UNSET])AS_REQUIRE([_AS_UNSET_PREPARE])dnl
$as_unset $1 || test "${$1+set}" != set || { $1=$2; export $1; }[]_m4_defun_epi([AS_UNSET])
T22,3
_m4_divert(HELP_OTHER)303
T18,342
AS_VERSION_COMPARE_m4_defun_pro([AS_VERSION_COMPARE])AS_REQUIRE([_$0_PREPARE])dnl
as_arg_v1=$1
as_arg_v2=$2
dnl This usage is portable even to ancient awk,
dnl so don't worry about finding a "nice" awk version.
awk "$as_awk_strverscmp" v1="$as_arg_v1" v2="$as_arg_v2" /dev/null
case $? in
1) $3;;
0) $4;;
2) $5;;
esac[]dnl
[]_m4_defun_epi([AS_VERSION_COMPARE])
F8,5
m4_shiftshift
T28,1
_m4_divert(HEADER-COPYRIGHT)3
T27,331
_AT_CREATE_DEBUGGING_SCRIPT	  {
	    echo "#! /bin/sh"
	    echo 'test "${ZSH_VERSION+set}" = set && alias -g '\''${1+"$[@]"}'\''='\''"$[@]"'\'''
	    echo "cd '$at_dir'"
	    echo 'exec ${CONFIG_SHELL-'"$SHELL"'}' "$[0]" \
	         '-v -d' "$at_debug_args" "$at_group" '${1+"$[@]"}'
	    echo 'exit 1'
	  } >$at_group_dir/run
	  chmod +x $at_group_dir/run

T16,244
_AS_BASENAME_SED_m4_defun_pro([_AS_BASENAME_SED])echo X/[]$1 |
    sed ['/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'][]_m4_defun_epi([_AS_BASENAME_SED])
T11,88
m4_undefinem4_ifndef([$1],
	   [m4_fatal([$0: undefined macro: $1])])dnl
m4_builtin([undefine], $@)
T29,81
m4_location(_AS_LN_S_PREPARE)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:916
T30,81
m4_location(AS_SHELL_SANITIZE)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:411
T20,20
m4_PACKAGE_BUGREPORTbug-autoconf@gnu.org
T30,81
m4_location(_AS_BASENAME_EXPR)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:693
T9,75
AS_ESCAPEm4_bpatsubst([$1],
	     m4_dquote(m4_default([$2], [\"$`])),
	     [\\\&])
T10,99
_m4_shiftnm4_if([$1], 0,
       [m4_shift($@)],
       [_m4_shiftn(m4_eval([$1]-1), m4_shift(m4_shift($@)))])
T15,118
AS_VAR_TEST_SETAS_LITERAL_IF([$1],
	       [test "${$1+set}" = set],
	       [{ as_var=$1; eval "test \"\${$as_var+set}\" = set"; }])
T11,48
m4_dumpdefs_m4_dumpdefs_up([$1])dnl
_m4_dumpdefs_down([$1])
T13,176
_m4_defun_prom4_ifndef([m4_expansion_stack], [_m4_defun_pro_outer[]])dnl
m4_expansion_stack_push(m4_defn([m4_location($1)])[: $1 is expanded from...])dnl
m4_pushdef([_m4_expanding($1)])dnl

T4,37
m4_nm4_if([$1],
       [], [],
	   [$1
])
T17,107
AT_ARG_OPTION_ARG_m4_defun_pro([AT_ARG_OPTION_ARG])_AT_ARG_OPTION([$1],[$2],1,[$3],[$4])[]_m4_defun_epi([AT_ARG_OPTION_ARG])
T13,98
AT_ARG_OPTION_m4_defun_pro([AT_ARG_OPTION])_AT_ARG_OPTION([$1],[$2],,[$3],[$4])[]_m4_defun_epi([AT_ARG_OPTION])
T17,676
_AS_SHELL_FN_WORKas_func_return () {
  (exit [$]1)
}
as_func_success () {
  as_func_return 0
}
as_func_failure () {
  as_func_return 1
}
as_func_ret_success () {
  return 0
}
as_func_ret_failure () {
  return 1
}

exitcode=0
AS_IF([as_func_success], [],
  [exitcode=1
  echo as_func_success failed.])
AS_IF([as_func_failure],
  [exitcode=1
  echo as_func_failure succeeded.])
AS_IF([as_func_ret_success], [],
  [exitcode=1
  echo as_func_ret_success failed.])
AS_IF([as_func_ret_failure],
  [exitcode=1
  echo as_func_ret_failure succeeded.])
AS_IF([( set x; as_func_ret_success y && test x = "[$]1" )], [],
  [exitcode=1
  echo positional parameters were not saved.])
test $exitcode = 0[]dnl

T9,38
AT_TESTEDm4_append_uniq([AT_tested], [$1], [
])
T10,68
_m4_divertm4_ifdef([_m4_divert($1)],
	  [m4_indir([_m4_divert($1)])],
	  [$1])
T9,167
_AS_QUOTE_AS_QUOTE_IFELSE([$1],
		  [AS_ESCAPE([$1], m4_default([$2], [`""]))],
		  [m4_warn([obsolete],
	   [back quotes and double quotes must not be escaped in: $1])dnl
$1])
T16,237
_AS_DIRNAME_EXPR_m4_defun_pro([_AS_DIRNAME_EXPR])AS_REQUIRE([_AS_EXPR_PREPARE])dnl
$as_expr X[]$1 : 'X\(.*[[^/]]\)//*[[^/][^/]]*/*$' \| \
	 X[]$1 : 'X\(//\)[[^/]]' \| \
	 X[]$1 : 'X\(//\)$' \| \
	 X[]$1 : 'X\(/\)' \| .[]_m4_defun_epi([_AS_DIRNAME_EXPR])
T8,0
__unix__
T24,81
m4_location(_AS_PREPARE)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:437
T14,53
m4_cr_symbols1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_
T14,63
m4_cr_symbols2abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789
T23,1786
_AS_DETECT_BETTER_SHELLm4_provide_if([_AS_DETECT_BETTER_SHELL],
			 [m4_warn([syntax], [_AS_DETECT_BETTER_SHELL invoked multiple times])],
			 [_m4_defun_pro([_AS_DETECT_BETTER_SHELL])m4_wrap([m4_divert_text([M4SH-SANITIZE], [
AS_REQUIRE([_AS_UNSET_PREPARE])dnl
if test "x$CONFIG_SHELL" = x; then
  AS_IF([_AS_RUN([_AS_DETECT_REQUIRED_BODY]) 2>/dev/null],
        [as_have_required=yes],
	[as_have_required=no])
  AS_IF([test $as_have_required = yes && dnl
	 _AS_RUN([_AS_DETECT_SUGGESTED_BODY]) 2> /dev/null],
    [],
    [as_candidate_shells=
    _AS_PATH_WALK([/bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH],
      [case $as_dir in
	 /*)
	   for as_base in sh bash ksh sh5; do
	     as_candidate_shells="$as_candidate_shells $as_dir/$as_base"
	   done;;
       esac])

      for as_shell in $as_candidate_shells $SHELL; do
	 # Try only shells that exist, to save several forks.
	 AS_IF([{ test -f "$as_shell" || test -f "$as_shell.exe"; } &&
		_AS_RUN([_AS_DETECT_REQUIRED_BODY],
                        [("$as_shell") 2> /dev/null])],
	       [CONFIG_SHELL=$as_shell
	       as_have_required=yes
	       AS_IF([_AS_RUN([_AS_DETECT_SUGGESTED_BODY], ["$as_shell" 2> /dev/null])],
		     [break])])
      done

      AS_IF([test "x$CONFIG_SHELL" != x],
        [for as_var in BASH_ENV ENV
        do ($as_unset $as_var) >/dev/null 2>&1 && $as_unset $as_var
        done
        export CONFIG_SHELL
        exec "$CONFIG_SHELL" "$as_myself" ${1+"$[@]"}])

    AS_IF([test $as_have_required = no],
      [echo This script requires a shell more modern than all the
      echo shells that I found on your system.  Please install a
      echo modern shell, or manually run the script under such a
      echo shell if you do have one.
      AS_EXIT(1)])
    ])
fi
])])[]_m4_defun_epi([_AS_DETECT_BETTER_SHELL])])
T28,3
_m4_divert(PARSE_ARGS_BEGIN)200
T16,775
_AS_LN_S_PREPARE_m4_defun_pro([_AS_LN_S_PREPARE])rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir
fi
echo >conf$$.file
if ln -s conf$$.file conf$$ 2>/dev/null; then
  as_ln_s='ln -s'
  # ... but there are two gotchas:
  # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
  # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
  # In both cases, we have to default to `cp -p'.
  ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
    as_ln_s='cp -p'
elif ln conf$$.file conf$$ 2>/dev/null; then
  as_ln_s=ln
else
  as_ln_s='cp -p'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null
[]_m4_defun_epi([_AS_LN_S_PREPARE])
T10,119
_AS_ECHO_NAS_REQUIRE([_AS_ECHO_N_PREPARE])dnl
echo $ECHO_N "_AS_QUOTE([$1])$ECHO_C" >&m4_default([$2],
						    [AS_MESSAGE_FD])
T12,24
m4_rename_m4m4_rename([$1], [m4_$1])
T18,81
m4_location(AS_IF)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:523
F14,11
m4_changequotechangequote
T9,115
m4_divertm4_define([m4_divert_stack], m4_location[: $0: $1]_m4_divert_n_stack)dnl
m4_builtin([divert], _m4_divert([$1]))dnl

T13,190
m4_defun_oncem4_define([m4_location($1)], m4_location)dnl
m4_define([$1],
	  [m4_provide_if([$1],
			 [m4_warn([syntax], [$1 invoked multiple times])],
			 [_m4_defun_pro([$1])$2[]_m4_defun_epi([$1])])])
T10,306
m4_requirem4_ifdef([_m4_expanding($1)],
	 [m4_fatal([$0: circular dependency of $1])])dnl
m4_ifndef([_m4_divert_dump],
	  [m4_fatal([$0($1): cannot be used outside of an ]dnl
m4_bmatch([$0], [^AC_], [[AC_DEFUN]], [[m4_defun]])['d macro])])dnl
m4_provide_if([$1],
	      [],
	      [_m4_require_call([$1], [$2])])dnl

T9,107
AS_TEST_X_m4_defun_pro([AS_TEST_X])AS_REQUIRE([_AS_TEST_PREPARE])dnl
$as_test_x $1[]dnl
[]_m4_defun_epi([AS_TEST_X])
T22,3
_m4_divert(HELP_MODES)301
T7,113
AS_CASE_m4_defun_pro([AS_CASE])m4_ifval([$2$3],
[case $1 in
_AS_CASE(m4_shift($@))
esac
])dnl
[]_m4_defun_epi([AS_CASE])
T26,86
m4_location(AT_ARG_OPTION)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/autotest/general.m4:1119
F7,4
m4_incrincr
T8,101
m4_fatalm4_errprintn(m4_location[: error: $1])dnl
m4_expansion_stack_dump()dnl
m4_exit(m4_if([$2],, 1, [$2]))
T13,241
m4_bpatsubstsm4_if([$#], 0, [m4_fatal([$0: too few arguments: $#])],
       [$#], 1, [m4_fatal([$0: too few arguments: $#: $1])],
       [$#], 2, [m4_builtin([patsubst], $@)],
       [$0(m4_builtin([patsubst], [[$1]], [$2], [$3]),
	   m4_shiftn(3, $@))])
F8,5
m4_ifdefifdef
T13,52
m4_cr_LettersabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
T23,3
_m4_divert(VERSION_END)352
T14,109
m4_file_appendm4_syscmd([cat >>$1 <<_m4eof
$2
_m4eof
])
m4_if(m4_sysval, [0], [],
      [m4_fatal([$0: cannot write: $1])])
T17,219
_AS_TR_SH_PREPARE_m4_defun_pro([_AS_TR_SH_PREPARE])AS_REQUIRE([_AS_CR_PREPARE])dnl
# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[[^_$as_cr_alnum]]%_%g'"
[]_m4_defun_epi([_AS_TR_SH_PREPARE])
F12,8
m4_bpatsubstpatsubst
F8,8
__file____file__
T8,101
m4_stripm4_bpatsubsts([[$1]],
	       [[	 ]+], [ ],
	       [^\(..\) ],    [\1],
	       [ \(..\)$],    [\1])
T20,207
_AS_BASENAME_PREPARE_m4_defun_pro([_AS_BASENAME_PREPARE])if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi
[]_m4_defun_epi([_AS_BASENAME_PREPARE])
T11,201
m4_list_cmpm4_if([$1$2], [()()], 0,
       [$1], [()], [$0((0), [$2])],
       [$2], [()], [$0([$1], (0))],
       [m4_case(m4_cmp(m4_car$1, m4_car$2),
		-1, -1,
		 1, 1,
		 0, [$0((m4_shift$1), (m4_shift$2))])])
T13,41
m4_provide_ifm4_ifdef([m4_provide($1)],
	  [$2], [$3])
T19,82
_m4_defun_epi_outerm4_undefine([_m4_divert_dump])dnl
m4_divert_pop([GROW])dnl
m4_undivert([GROW])dnl

F11,11
__program____program__
T32,81
m4_location(_AS_DIRNAME_PREPARE)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:784
T18,107
m4_version_comparem4_list_cmp((m4_split(m4_version_unletter([$1]), [\.])),
	     (m4_split(m4_version_unletter([$2]), [\.])))
T18,58
_m4_divert_n_stackm4_ifdef([m4_divert_stack], [
m4_defn([m4_divert_stack])])
T19,229
_AS_DETECT_REQUIRED_m4_defun_pro([_AS_DETECT_REQUIRED])m4_require([_AS_DETECT_BETTER_SHELL])dnl
m4_expand_once([m4_append([_AS_DETECT_REQUIRED_BODY], [
($1) || AS_EXIT(1)
])], [_AS_DETECT_REQUIRED_provide($1)])[]_m4_defun_epi([_AS_DETECT_REQUIRED])
T14,125
m4_append_uniqm4_ifdef([$1],
	  [m4_bmatch([$3]m4_defn([$1])[$3], m4_re_escape([$3$2$3]), [],
		     [m4_append($@)])],
	  [m4_append($@)])
T9,4
m4_dquote[$@]
T22,82
m4_location(AS_TR_CPP)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:1378
T15,126
_m4_dumpdefs_upm4_ifdef([$1],
	  [m4_pushdef([_m4_dumpdefs], m4_defn([$1]))dnl
m4_dumpdef([$1])dnl
m4_popdef([$1])dnl
_m4_dumpdefs_up([$1])])
T12,1155
m4_text_wrapm4_pushdef([m4_Prefix], [$2])dnl
m4_pushdef([m4_Prefix1], m4_default([$3], [m4_Prefix]))dnl
m4_pushdef([m4_Width], m4_default([$4], 79))dnl
m4_pushdef([m4_Cursor], m4_qlen(m4_Prefix1))dnl
m4_pushdef([m4_Separator], [])dnl
m4_Prefix1[]dnl
m4_if(m4_eval(m4_qlen(m4_Prefix1) > m4_len(m4_Prefix)),
      1, [m4_define([m4_Cursor], m4_len(m4_Prefix))
m4_Prefix],
      m4_if(m4_eval(m4_qlen(m4_Prefix1) < m4_len(m4_Prefix)),
	    [0], [],
	    [m4_define([m4_Cursor], m4_len(m4_Prefix))[]dnl
m4_for(m4_Space, m4_qlen(m4_Prefix1), m4_eval(m4_len(m4_Prefix) - 1),
		    [], [ ])])[]dnl
)[]dnl
m4_foreach_w([m4_Word], [$1],
[m4_define([m4_Cursor], m4_eval(m4_Cursor + m4_qlen(m4_defn([m4_Word])) + 1))dnl
dnl New line if too long, else insert a space unless it is the first
dnl of the words.
m4_if(m4_eval(m4_Cursor > m4_Width),
      1, [m4_define([m4_Cursor],
		    m4_eval(m4_len(m4_Prefix) + m4_qlen(m4_defn([m4_Word])) + 1))]
m4_Prefix,
       [m4_Separator])[]dnl
m4_defn([m4_Word])[]dnl
m4_define([m4_Separator], [ ])])dnl
m4_popdef([m4_Separator])dnl
m4_popdef([m4_Cursor])dnl
m4_popdef([m4_Width])dnl
m4_popdef([m4_Prefix1])dnl
m4_popdef([m4_Prefix])dnl

T11,275
AT_XFAIL_IFdnl
dnl Try to limit the amount of conditionals that we emit.
m4_case([$1],
      [], [],
      [false], [],
      [:], [m4_define([AT_xfail], [at_xfail=yes])],
      [true], [m4_define([AT_xfail], [at_xfail=yes])],
      [m4_append([AT_xfail], [
      $1 && at_xfail=yes])])
T8,219
AS_TR_SH_m4_defun_pro([AS_TR_SH])AS_REQUIRE([_$0_PREPARE])dnl
AS_LITERAL_IF([$1],
	      [m4_bpatsubst(m4_translit([[$1]], [*+], [pp]),
			    [[^a-zA-Z0-9_]], [_])],
	      [`echo "$1" | $as_tr_sh`])[]_m4_defun_epi([AS_TR_SH])
T10,40
m4_warningm4_errprintn(m4_location[: warning: $1])
F10,8
m4_mkstempmaketemp
T20,73
AS_BOURNE_COMPATIBLE# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
_$0

T31,82
m4_location(AS_VERSION_COMPARE)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:1307
T11,225
_AS_PREPARE_m4_defun_pro([_AS_PREPARE])_AS_LINENO_PREPARE

_AS_DIRNAME_PREPARE
_AS_ECHO_N_PREPARE
_AS_EXPR_PREPARE
_AS_LN_S_PREPARE
_AS_MKDIR_P_PREPARE
_AS_TEST_PREPARE
_AS_TR_CPP_PREPARE
_AS_TR_SH_PREPARE
[]_m4_defun_epi([_AS_PREPARE])
T12,10
m4_cr_digits0123456789
T18,1
_m4_divert(NOTICE)5
T16,64
_AS_QUOTE_IFELSEm4_bmatch([$1],
	  [\\[\\$]], [$2],
	  [\\[`""]], [$3],
	  [$2])
T11,17
m4_location__file__:__line__
T8,4
m4_quote[$*]
T7,57
AS_EXIT{ (exit m4_default([$1], 1)); exit m4_default([$1], 1); }
F9,6
m4_syscmdsyscmd
F11,8
m4_traceofftraceoff
T31,82
m4_location(_AS_TR_CPP_PREPARE)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:1363
F6,3
m4_lenlen
T14,115
m4_expand_oncem4_provide_if(m4_ifval([$2], [[$2]], [[$1]]),
	       [],
	       [m4_provide(m4_ifval([$2], [[$2]], [[$1]]))[]$1])
T23,81
m4_location(AS_PREPARE)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:445
T10,623
AT_CLEANUPm4_append([AT_help_all],
m4_defn([AT_ordinal]);m4_defn([AT_line]);m4_defn([AT_description]);m4_ifdef([AT_keywords], [m4_defn([AT_keywords])]);
)dnl
m4_divert_pop([TEST_SCRIPT])dnl Back to TESTS
    AT_xfail
    echo "#                             -*- compilation -*-" >> "$at_group_log"
    (
      echo "AT_ordinal. m4_defn([AT_line]): testing $1..."
      $at_traceon
m4_undivert([TEST_SCRIPT])dnl Insert the code here
      $at_traceoff
      $at_times_p && times >"$at_times_file"
    ) AS_MESSAGE_LOG_FD>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat "$at_status_file"`
    ;;

m4_divert_pop([TESTS])dnl Back to KILL.

T16,2
_m4_divert(KILL)-1
T9,403
AS_TMPDIR# Create a (secure) tmp directory for tmp files.
m4_if([$2], [], [: ${TMPDIR=/tmp}])
{
  tmp=`(umask 077 && mktemp -d "m4_default([$2], [$TMPDIR])/$1XXXXXX") 2>/dev/null` &&
  test -n "$tmp" && test -d "$tmp"
}  ||
{
  tmp=m4_default([$2], [$TMPDIR])/$1$$-$RANDOM
  (umask 077 && mkdir "$tmp")
} ||
{
   echo "$me: cannot create a temporary directory in m4_default([$2], [$TMPDIR])" >&2
   AS_EXIT
}dnl

T9,1714
_AT_CHECK$at_traceoff
echo "$at_srcdir/AT_LINE: AS_ESCAPE([$1])"
echo AT_LINE >"$at_check_line_file"

at_trace_this=
if test -n "$at_traceon"; then
    _AT_DECIDE_TRACEABLE([$1])
fi

if test -n "$at_trace_this"; then
    ( $at_traceon; $1 ) >"$at_stdout" 2>"$at_stder1"
    at_status=$?
    grep '^ *+' "$at_stder1" >&2
    grep -v '^ *+' "$at_stder1" >"$at_stderr"
else
    ( :; $1 ) >"$at_stdout" 2>"$at_stderr"
    at_status=$?
fi

at_failed=false
dnl Check stderr.
m4_case([$4],
	stderr, [echo stderr:; tee stderr <"$at_stderr"],
	ignore, [echo stderr:; cat "$at_stderr"],
	experr, [$at_diff experr "$at_stderr" || at_failed=:],
	[],     [$at_diff "$at_devnull" "$at_stderr" || at_failed=:],
	[echo >>"$at_stderr"; echo "m4_ifval([$7],[AS_ESCAPE([$4])],[$4])" | $at_diff - "$at_stderr" || at_failed=:])
dnl Check stdout.
m4_case([$3],
	stdout, [echo stdout:; tee stdout <"$at_stdout"],
	ignore, [echo stdout:; cat "$at_stdout"],
	expout, [$at_diff expout "$at_stdout" || at_failed=:],
	[],     [$at_diff "$at_devnull" "$at_stdout" || at_failed=:],
	[echo >>"$at_stdout"; echo "m4_ifval([$7],[AS_ESCAPE([$3])],[$3])" | $at_diff - "$at_stdout" || at_failed=:])
dnl Check exit val.  Don't `skip' if we are precisely checking $? = 77.
case $at_status in
m4_if([$2], [77],
    [],
    [   77) echo 77 > "$at_status_file"; exit 77;;
])dnl
m4_if([$2], [ignore],
    [   *);;],
    [   m4_default([$2], [0])) ;;
   *) echo "$at_srcdir/AT_LINE: exit code was $at_status, expected m4_default([$2], [0])"
      at_failed=:;;])
esac
AS_IF($at_failed, [$5
  m4_ifdef([AT_capture_files],
    [for file in AT_capture_files
     do echo "$file:"; sed 's/^/> /' "$file"; done])
  echo 1 > "$at_status_file"
  exit 1], [$6])
$at_traceon

T10,98
AS_PREPARE_m4_defun_pro([AS_PREPARE])m4_divert_text([M4SH-INIT], [_AS_PREPARE])[]_m4_defun_epi([AS_PREPARE])
F8,5
m4_indirindir
T27,2102
_AS_VERSION_COMPARE_PREPARE_m4_defun_pro([_AS_VERSION_COMPARE_PREPARE])[as_awk_strverscmp='
  # Use only awk features that work with 7th edition Unix awk (1978).
  # My, what an old awk you have, Mr. Solaris!
  END {
    while (length(v1) && length(v2)) {
      # Set d1 to be the next thing to compare from v1, and likewise for d2.
      # Normally this is a single character, but if v1 and v2 contain digits,
      # compare them as integers and fractions as strverscmp does.
      if (v1 ~ /^[0-9]/ && v2 ~ /^[0-9]/) {
	# Split v1 and v2 into their leading digit string components d1 and d2,
	# and advance v1 and v2 past the leading digit strings.
	for (len1 = 1; substr(v1, len1 + 1) ~ /^[0-9]/; len1++) continue
	for (len2 = 1; substr(v2, len2 + 1) ~ /^[0-9]/; len2++) continue
	d1 = substr(v1, 1, len1); v1 = substr(v1, len1 + 1)
	d2 = substr(v2, 1, len2); v2 = substr(v2, len2 + 1)
	if (d1 ~ /^0/) {
	  if (d2 ~ /^0/) {
	    # Compare two fractions.
	    while (d1 ~ /^0/ && d2 ~ /^0/) {
	      d1 = substr(d1, 2); len1--
	      d2 = substr(d2, 2); len2--
	    }
	    if (len1 != len2 && ! (len1 && len2 && substr(d1, 1, 1) == substr(d2, 1, 1))) {
	      # The two components differ in length, and the common prefix
	      # contains only leading zeros.  Consider the longer to be less.
	      d1 = -len1
	      d2 = -len2
	    } else {
	      # Otherwise, compare as strings.
	      d1 = "x" d1
	      d2 = "x" d2
	    }
	  } else {
	    # A fraction is less than an integer.
	    exit 1
	  }
	} else {
	  if (d2 ~ /^0/) {
	    # An integer is greater than a fraction.
	    exit 2
	  } else {
	    # Compare two integers.
	    d1 += 0
	    d2 += 0
	  }
	}
      } else {
	# The normal case, without worrying about digits.
	d1 = substr(v1, 1, 1); v1 = substr(v1, 2)
	d2 = substr(v2, 1, 1); v2 = substr(v2, 2)
      }
      if (d1 < d2) exit 1
      if (d1 > d2) exit 2
    }
    # Beware Solaris /usr/xgp4/bin/awk (at least through Solaris 10),
    # which mishandles some comparisons of empty strings to integers.
    if (length(v2)) exit 1
    if (length(v1)) exit 2
  }
'][]_m4_defun_epi([_AS_VERSION_COMPARE_PREPARE])
T9,58
m4_ifvalnm4_if([$1],
       [],   [m4_n([$3])],
	     [m4_n([$2])])
F8,5
m4_indexindex
T17,0
m4_pattern_forbid
F10,7
m4_traceontraceon
T39,81
m4_location(_AS_PATH_SEPARATOR_PREPARE)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:982
T22,31
m4_expansion_stack_popm4_popdef([m4_expansion_stack])
T10,69
m4_tolowerm4_translit([$1], m4_defn([m4_cr_LETTERS]), m4_defn([m4_cr_letters]))
T10,121
m4_re_word[abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_][abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789]*
T33,81
m4_location(_AS_BASENAME_PREPARE)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:728
T25,1
_m4_divert(M4SH-SANITIZE)4
T12,66
m4_re_string[abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789]*
T28,81
m4_location(_AS_DIRNAME_SED)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:767
T28,81
m4_location(AS_EXECUTABLE_P)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:802
F11,8
m4_errprinterrprint
T6,122
m4_cdrm4_if([$#], 0, [m4_fatal([$0: cannot be called without arguments])],
       [$#], 1, [],
       [m4_dquote(m4_shift($@))])
T18,4
m4_PACKAGE_VERSION2.61
T18,243
_AS_TR_CPP_PREPARE_m4_defun_pro([_AS_TR_CPP_PREPARE])AS_REQUIRE([_AS_CR_PREPARE])dnl
# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[[^_$as_cr_alnum]]%_%g'"
[]_m4_defun_epi([_AS_TR_CPP_PREPARE])
T17,3
_m4_divert(TESTS)401
T13,420
m4_divert_popm4_ifndef([_m4_divert_diversion],
           [m4_fatal([too many m4_divert_pop])])dnl
m4_if([$1], [], [],
      [$1], m4_defn([_m4_divert_diversion]), [],
      [m4_fatal([$0($1): diversion mismatch: ]_m4_divert_n_stack)])dnl
m4_popdef([m4_divert_stack])dnl
m4_popdef([_m4_divert_diversion])dnl
m4_builtin([divert],
	   m4_ifdef([_m4_divert_diversion],
		    [_m4_divert(m4_defn([_m4_divert_diversion]))],
		    -1))dnl

T14,135
_AS_TR_PREPARE_m4_defun_pro([_AS_TR_PREPARE])AS_REQUIRE([_AS_TR_SH_PREPARE])dnl
AS_REQUIRE([_AS_TR_CPP_PREPARE])dnl
[]_m4_defun_epi([_AS_TR_PREPARE])
T13,15
AS_VAR_POPDEFm4_popdef([$1])
T25,1
_AS_DETECT_SUGGESTED_BODY:
F7,6
m4_wrapm4wrap
T29,81
m4_location(_AS_BASENAME_SED)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:709
T21,3
_m4_divert(TESTS_END)402
T29,82
m4_location(_AS_TEST_PREPARE)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:1066
T8,42
_AS_ECHO_AS_ECHO_UNQUOTED([_AS_QUOTE([$1])], [$2])
T7,66
m4_qlenm4_len(m4_bpatsubsts([[$1]], [@\(<:\|:>\|S|\|%:\)@], [P], [@&t@]))
T19,195
_AS_DIRNAME_PREPARE_m4_defun_pro([_AS_DIRNAME_PREPARE])if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi
[]_m4_defun_epi([_AS_DIRNAME_PREPARE])
T12,18
m4_errprintnm4_errprint([$1
])
T13,271
_AS_PATH_WALKAS_REQUIRE([_AS_PATH_SEPARATOR_PREPARE])dnl
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
m4_bmatch([$1], [[:;]],
[as_dummy="$1"
for as_dir in $as_dummy],
[for as_dir in m4_default([$1], [$PATH])])
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  $2
done
IFS=$as_save_IFS

T17,200
_AS_BASENAME_EXPR_m4_defun_pro([_AS_BASENAME_EXPR])AS_REQUIRE([_AS_EXPR_PREPARE])dnl
$as_expr X/[]$1 : '.*/\([[^/][^/]*]\)/*$' \| \
	 X[]$1 : 'X\(//\)$' \| \
	 X[]$1 : 'X\(/\)' \| .[]_m4_defun_epi([_AS_BASENAME_EXPR])
T10,69
m4_toupperm4_translit([$1], m4_defn([m4_cr_letters]), m4_defn([m4_cr_LETTERS]))
T16,3
_m4_divert(HELP)300
T14,44
m4_divert_oncem4_expand_once([m4_divert_text([$1], [$2])])
T10,77
m4_map_sepm4_if([$3], [[]], [],
       [$1(m4_fst($3))[]_m4_map([$2[]$1], m4_cdr($3))])
T18,252
_AS_ECHO_N_PREPARE_m4_defun_pro([_AS_ECHO_N_PREPARE])ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in
-n*)
  case `echo 'x\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  *)   ECHO_C='\c';;
  esac;;
*)
  ECHO_N='-n';;
esac
[]_m4_defun_epi([_AS_ECHO_N_PREPARE])
T7,127
m4_warn_m4_warn([$1], [$2],
m4_ifdef([m4_expansion_stack],
         [m4_defn([m4_expansion_stack])
m4_location[: the top level]]))dnl

T33,81
m4_location(_AS_DETECT_SUGGESTED)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:224
T9,36
m4_renamem4_copy([$1], [$2])m4_undefine([$1])
F12,9
m4_changecomchangecom
T31,81
m4_location(_AS_ECHO_N_PREPARE)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:640
F3,3
dnldnl
T13,142
_m4_defun_epim4_popdef([_m4_expanding($1)])dnl
m4_expansion_stack_pop()dnl
m4_ifndef([m4_expansion_stack], [_m4_defun_epi_outer[]])dnl
m4_provide([$1])dnl

F9,6
m4_formatformat
T8,31
m4_splitm4_ifval([$1], [_m4_split($@)])
T6,51
m4_mapm4_if([$2], [[]], [],
       [_m4_map([$1], [$2])])
T8,201
_AS_CASEm4_if([$#], 0, [m4_fatal([$0: too few arguments: $#])],
       [$#], 1, [  *) $1 ;;],
       [$#], 2, [  $1) m4_default([$2], [:]) ;;],
       [  $1) m4_default([$2], [:]) ;;
$0(m4_shiftn(2, $@))])dnl

T16,5
_m4_divert(GROW)10000
T6,136
_AS_IFm4_ifval([$2$3],
[elif $1; then
  m4_default([$2], [:])
m4_ifval([$3], [$0(m4_shiftn(2, $@))])],
[m4_ifvaln([$1],
[else
  $1])dnl
])dnl

T12,52
m4_foreach_wm4_foreach([$1], m4_split(m4_normalize([$2])), [$3])
T11,55
m4_sincludem4_include_unique([$1])dnl
m4_builtin([sinclude], [$1])
T7,84
m4_defnm4_ifndef([$1],
	   [m4_fatal([$0: undefined macro: $1])])dnl
m4_builtin([defn], $@)
T27,86
m4_location(_AT_ARG_OPTION)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/autotest/general.m4:1099
T16,0
m4_pattern_allow
T14,300
_AS_CR_PREPARE_m4_defun_pro([_AS_CR_PREPARE])# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits
[]_m4_defun_epi([_AS_CR_PREPARE])
T25,3
_m4_divert(PREPARE_TESTS)400
T10,98
AS_VAR_GETAS_LITERAL_IF([$1],
	       [$$1],
	       [`eval echo '${'m4_bpatsubst($1, [[\\`]], [\\\&])'}'`])
T30,0
m4_include(m4sugar/version.m4)
T11,40
AT_KEYWORDSm4_append_uniq([AT_keywords], [$1], [ ])
T10,128
AS_MESSAGEm4_ifset([AS_MESSAGE_LOG_FD],
	  [{ _AS_ECHO_LOG([$1])
_AS_ECHO([$as_me: $1], [$2]);}],
	  [_AS_ECHO([$as_me: $1], [$2])])[]dnl

T17,32
m4_define_defaultm4_ifndef([$1], [m4_define($@)])
F10,7
m4_pushdefpushdef
T9,278
AS_TR_CPP_m4_defun_pro([AS_TR_CPP])AS_REQUIRE([_$0_PREPARE])dnl
AS_LITERAL_IF([$1],
	      [m4_bpatsubst(m4_translit([[$1]],
					[*abcdefghijklmnopqrstuvwxyz],
					[PABCDEFGHIJKLMNOPQRSTUVWXYZ]),
			   [[^A-Z0-9_]], [_])],
	      [`echo "$1" | $as_tr_cpp`])[]_m4_defun_epi([AS_TR_CPP])
T13,26
m4_cr_lettersabcdefghijklmnopqrstuvwxyz
T18,8
m4_PACKAGE_TARNAMEautoconf
T26,383
_AS_PATH_SEPARATOR_PREPARE_m4_defun_pro([_AS_PATH_SEPARATOR_PREPARE])# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  echo "#! /bin/sh" >conf$$.sh
  echo  "exit 0"   >>conf$$.sh
  chmod +x conf$$.sh
  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
    PATH_SEPARATOR=';'
  else
    PATH_SEPARATOR=:
  fi
  rm -f conf$$.sh
fi
[]_m4_defun_epi([_AS_PATH_SEPARATOR_PREPARE])
F8,8
__line____line__
T7,30
AT_DATAcat >$1 <<'_ATEOF'
$2[]_ATEOF

T8,27
m4_ifvalm4_if([$1], [], [$3], [$2])
T9,263
AT_BANNERm4_define([AT_banner_ordinal], m4_incr(AT_banner_ordinal))
m4_append([AT_groups_all], [ banner-]m4_defn([AT_banner_ordinal]))
m4_divert_text([TESTS],
[
  banner-AT_banner_ordinal ) @%:@ Banner AT_banner_ordinal. AT_LINE
    cat <<\_ATEOF

$1

_ATEOF
    ;;
])dnl

T17,117
m4_include_uniquem4_ifdef([m4_include($1)],
	  [m4_warn([syntax], [file `$1' included several times])])dnl
m4_define([m4_include($1)])
T10,562
AS_MKDIR_PAS_REQUIRE([_$0_PREPARE])dnl
{ as_dir=$1
  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || { $as_mkdir_p && mkdir -p "$as_dir"; } || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`AS_DIRNAME("$as_dir")`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || AS_ERROR([cannot create directory $as_dir]); }dnl

F9,6
m4_divnumdivnum
F7,4
m4_evaleval
T14,293
AS_HELP_STRINGm4_pushdef([AS_Prefix], m4_default([$3], [                          ]))dnl
m4_pushdef([AS_Prefix_Format],
	   [  %-]m4_eval(m4_len(AS_Prefix) - 3)[s ])dnl [  %-23s ]
m4_text_wrap([$2], AS_Prefix, m4_format(AS_Prefix_Format, [$1]))dnl
m4_popdef([AS_Prefix_Format])dnl
m4_popdef([AS_Prefix])dnl

T9,225
m4_bmatchm4_if([$#], 0, [m4_fatal([$0: too few arguments: $#])],
       [$#], 1, [m4_fatal([$0: too few arguments: $#: $1])],
       [$#], 2, [$2],
       [m4_if(m4_bregexp([$1], [$2]), -1, [$0([$1], m4_shiftn(3, $@))],
	      [$3])])
T6,4
m4_car[$1]
T11,174
m4_text_box@%:@@%:@ m4_bpatsubst([$1], [.], m4_if([$2], [], [[-]], [[$2]])) @%:@@%:@
@%:@@%:@ $1 @%:@@%:@
@%:@@%:@ m4_bpatsubst([$1], [.], m4_if([$2], [], [[-]], [[$2]])) @%:@@%:@[]dnl

T7,62
_m4_mapm4_ifval([$2],
	  [$1(m4_fst($2))[]_m4_map([$1], m4_cdr($2))])
T23,3
_m4_divert(TEST_SCRIPT)403
T8,1069
AS_UNAME{
cat <<_ASUNAME
m4_text_box([Platform.])

hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
uname -m = `(uname -m) 2>/dev/null || echo unknown`
uname -r = `(uname -r) 2>/dev/null || echo unknown`
uname -s = `(uname -s) 2>/dev/null || echo unknown`
uname -v = `(uname -v) 2>/dev/null || echo unknown`

/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`

/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
/usr/bin/hostinfo      = `(/usr/bin/hostinfo) 2>/dev/null      || echo unknown`
/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`

_ASUNAME

_AS_PATH_WALK([$PATH], [echo "PATH: $as_dir"])
}
T32,81
m4_location(_AS_DETECT_REQUIRED)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:213
T6,27
m4_cmpm4_sign(m4_eval([$1 - $2]))
T7,50
m4_signm4_bmatch([$1],
	   [^-], -1,
	   [^0+], 0,
		  1)
T10,88
AS_REQUIREm4_provide_if([$1], [],
	       [m4_divert_text([M4SH-INIT], [m4_default([$2], [$1])])])
T11,170
AS_BASENAME_m4_defun_pro([AS_BASENAME])AS_REQUIRE([_$0_PREPARE])dnl
$as_basename -- $1 ||
_AS_BASENAME_EXPR([$1]) 2>/dev/null ||
_AS_BASENAME_SED([$1])[]_m4_defun_epi([AS_BASENAME])
T9,86
m4_popdefm4_ifndef([$1],
	   [m4_fatal([$0: undefined macro: $1])])dnl
m4_builtin([popdef], $@)
T7,102
_AS_RUNm4_ifval([$2],
[{ $2 <<\_ASEOF
_AS_BOURNE_COMPATIBLE
$1
_ASEOF
}],
[(eval "AS_ESCAPE(m4_quote($1))")])
T19,309
m4_version_unletterm4_translit(m4_bpatsubsts([$1],
			   [\([0-9]+\)\([abcdefghi]\)],
			     [m4_eval(\1 + 1).-1.\2],
			   [\([0-9]+\)\([jklmnopqrs]\)],
			     [m4_eval(\1 + 1).-1.1\2],
			   [\([0-9]+\)\([tuvwxyz]\)],
			     [m4_eval(\1 + 1).-1.2\2]),
	     [abcdefghijklmnopqrstuvwxyz],
	     [12345678901234567890123456])
T24,81
m4_location(AS_BASENAME)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:715
T36,81
m4_location(_AS_DETECT_BETTER_SHELL)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:286
T17,1766
AS_SHELL_SANITIZE_m4_defun_pro([AS_SHELL_SANITIZE])## --------------------- ##
## M4sh Initialization.  ##
## --------------------- ##

AS_BOURNE_COMPATIBLE

# PATH needs CR
_AS_CR_PREPARE
_AS_PATH_SEPARATOR_PREPARE
_AS_UNSET_PREPARE

# IFS
# We need space, tab and new line, in precisely that order.  Quoting is
# there to prevent editors from complaining about space-tab.
# (If _AS_PATH_WALK were called with IFS unset, it would disable word
# splitting by setting IFS to empty value.)
as_nl='
'
IFS=" ""	$as_nl"

# Find who we are.  Look in the path if we contain no directory separator.
case $[0] in
  *[[\\/]]* ) as_myself=$[0] ;;
  *) _AS_PATH_WALK([],
		   [test -r "$as_dir/$[0]" && as_myself=$as_dir/$[0] && break])
     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$[0]
fi
if test ! -f "$as_myself"; then
  echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  AS_EXIT
fi

# Work around bugs in pre-3.0 UWIN ksh.
for as_var in ENV MAIL MAILPATH
do ($as_unset $as_var) >/dev/null 2>&1 && $as_unset $as_var
done
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
for as_var in \
  LANG LANGUAGE LC_ADDRESS LC_ALL LC_COLLATE LC_CTYPE LC_IDENTIFICATION \
  LC_MEASUREMENT LC_MESSAGES LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER \
  LC_TELEPHONE LC_TIME
do
  if (set +x; test -z "`(eval $as_var=C; export $as_var) 2>&1`"); then
    eval $as_var=C; export $as_var
  else
    ($as_unset $as_var) >/dev/null 2>&1 && $as_unset $as_var
  fi
done

# Required to use basename.
_AS_EXPR_PREPARE
_AS_BASENAME_PREPARE

# Name of the executable.
as_me=`AS_BASENAME("$[0]")`

# CDPATH.
$as_unset CDPATH
[]_m4_defun_epi([AS_SHELL_SANITIZE])
T7,394
m4_init# All the M4sugar macros start with `m4_', except `dnl' kept as is
# for sake of simplicity.
m4_pattern_forbid([^_?m4_])
m4_pattern_forbid([^dnl$])

# _m4_divert_diversion should be defined:
m4_divert_push([KILL])

# Check the divert push/pop perfect balance.
m4_wrap([m4_divert_pop([])
	 m4_ifdef([_m4_divert_diversion],
	   [m4_fatal([$0: unbalanced m4_divert_push:]_m4_divert_n_stack)])[]])

T22,81
m4_location(AS_TEST_X)/usr/src/autoconf/26/autoconf2.5-2.61-1/src/autoconf-2.61/lib/m4sugar/m4sh.m4:793
T11,91
_m4_foreachm4_ifval([$2],
	  [m4_define([$1], m4_car($2))$3[]dnl
_m4_foreach([$1], m4_cdr($2), [$3])])
T20,3
_m4_divert(DEFAULTS)100
F10,6
m4_bregexpregexp
T6,519
m4_form4_pushdef([$1], m4_eval([$2]))dnl
m4_if(m4_eval(([$3]) > $1), 1,
[m4_pushdef([_m4_step], m4_eval(m4_default([$4], 1)))dnl
m4_assert(_m4_step > 0)dnl
_m4_for([$1], m4_eval((([$3]) - $1) / _m4_step * _m4_step + $1), _m4_step, [$5])],
      m4_eval(([$3]) < $1), 1,
[m4_pushdef([_m4_step], m4_eval(m4_default([$4], -1)))dnl
m4_assert(_m4_step < 0)dnl
_m4_for([$1], m4_eval(($1 - ([$3])) / -(_m4_step) * _m4_step + $1), _m4_step, [$5])],
      [m4_pushdef(_m4_step,[])dnl
$5])[]dnl
m4_popdef([_m4_step])dnl
m4_popdef([$1])
F10,7
m4_esyscmdesyscmd
F12,9
m4_debugfiledebugfile
T7,58
AT_LINEm4_bpatsubst(__file__, [^\(.*/\)*\(.*\)], [[\2]]):__line__
T6,2
m4_fst$1
T23,126
m4_expansion_stack_dumpm4_ifdef([m4_expansion_stack],
	  [m4_errprintn(m4_defn([m4_expansion_stack]))])dnl
m4_errprintn(m4_location[: the top level])
T19,80
_m4_defun_pro_outerm4_copy([_m4_divert_diversion], [_m4_divert_dump])dnl
m4_divert_push([GROW])dnl

T16,256
_AS_SHELL_FN_SPY_AS_DETECT_SUGGESTED([_AS_SHELL_FN_WORK])
_AS_RUN([_AS_SHELL_FN_WORK]) || {
  echo No shell found that supports shell functions.
  echo Please tell autoconf@gnu.org about your system,
  echo including any error possibly output before this
  echo message
}

T15,292
_AS_DIRNAME_SED_m4_defun_pro([_AS_DIRNAME_SED])echo X[]$1 |
    sed ['/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'][]_m4_defun_epi([_AS_DIRNAME_SED])
T31,87
_AT_NORMALIZE_TEST_GROUP_NUMBER
  while :; do
    case $$1 in #(
    $at_format*) break;;
    esac
    $1=0$$1
  done

T19,177
_AS_MKDIR_P_PREPARE_m4_defun_pro([_AS_MKDIR_P_PREPARE])if mkdir -p . 2>/dev/null; then
  as_mkdir_p=:
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi
[]_m4_defun_epi([_AS_MKDIR_P_PREPARE])
T16,197
_AS_EXPR_PREPARE_m4_defun_pro([_AS_EXPR_PREPARE])if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi
[]_m4_defun_epi([_AS_EXPR_PREPARE])
T13,42
AS_VAR_SET_IFAS_IF([AS_VAR_TEST_SET([$1])], [$2], [$3])
T10,46
m4_foreachm4_pushdef([$1])_m4_foreach($@)m4_popdef([$1])
T9,69
m4_assertm4_if(m4_eval([$1]), 0,
       [m4_fatal([assert failed: $1], [$2])])
D-1,0

# End of frozen state file
